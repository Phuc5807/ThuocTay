/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.qlthuocstore;

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import static com.mycompany.qlthuocstore.QuanLy.createInvoicePDF;
import java.awt.Image;
import java.awt.MediaTracker;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Phuc
 */
public class NhanVien extends javax.swing.JFrame {
    public javax.swing.JPanel jp1;
    public javax.swing.JPanel jp2;
    public javax.swing.JPanel jp3;
    public javax.swing.JPanel jp4;
    public javax.swing.JPanel jp5;
    public javax.swing.JPanel jp6;
    /**
     * Creates new form QuanLy
     */
    public NhanVien() {
        initComponents();
        
        loadData();
        initListeners();
        jLogout.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                jLogoutActionPerformed(e);
            }
        });
        
        Table1.addMouseListener(new java.awt.event.MouseAdapter() {
           public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table1MouseClicked(evt);
            }
        });
        
        
        Table3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table3MouseClicked(evt);
            }
        });
        
        
        // Khởi tạo bảng và mô hình
        DefaultTableModel model = new DefaultTableModel(
            new Object[][] {},
            new String[] {"Mã thuốc", "Tên thuốc", "Đơn giá (VNĐ)", "Số lượng", "Thành tiền (VNĐ)"}
        );
        Table4.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tab1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tab2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tab3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        tab4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        tab5 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLogout = new javax.swing.JButton();
        tab6 = new javax.swing.JPanel();
        jLabel45 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jp6 = new javax.swing.JPanel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        searchData2 = new javax.swing.JTextField();
        searchBtn2 = new javax.swing.JButton();
        jLabel49 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        Table2 = new javax.swing.JTable();
        jp5 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        searchData5 = new javax.swing.JTextField();
        searchBtn5 = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        Table6 = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        Table7 = new javax.swing.JTable();
        jLabel31 = new javax.swing.JLabel();
        jBtnIn2 = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        jChonHD = new javax.swing.JTextField();
        jp4 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jPhoneKH = new javax.swing.JTextField();
        jNameKH = new javax.swing.JTextField();
        submit = new javax.swing.JButton();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        reset2 = new javax.swing.JButton();
        searchBtn4 = new javax.swing.JButton();
        searchData4 = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        Table5 = new javax.swing.JTable();
        jp3 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        Table3 = new javax.swing.JTable();
        jLabel33 = new javax.swing.JLabel();
        searchData3 = new javax.swing.JTextField();
        searchBtn3 = new javax.swing.JButton();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jNameBH = new javax.swing.JTextField();
        jDonGiaBH = new javax.swing.JTextField();
        jSoLuongBH = new javax.swing.JTextField();
        submitBH = new javax.swing.JButton();
        updateBH = new javax.swing.JButton();
        deleteBH = new javax.swing.JButton();
        reset1 = new javax.swing.JButton();
        jLabel38 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        Table4 = new javax.swing.JTable();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jTongTien = new javax.swing.JTextField();
        jGiamGia = new javax.swing.JTextField();
        jCBThue = new javax.swing.JComboBox<>();
        jThanhToan = new javax.swing.JButton();
        jLabel42 = new javax.swing.JLabel();
        jTienKhachTra = new javax.swing.JTextField();
        lblanh2 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jTienThua = new javax.swing.JTextField();
        resetBH = new javax.swing.JButton();
        jp2 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        searchData1 = new javax.swing.JTextField();
        searchBtn1 = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Table1 = new javax.swing.JTable();
        lblanh1 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jp1 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1461, 929));

        jPanel1.setBackground(new java.awt.Color(51, 153, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(272, 781));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/herbal (1).png"))); // NOI18N
        jLabel1.setText("Medick Flare");

        tab1.setBackground(new java.awt.Color(204, 204, 255));
        tab1.setPreferredSize(new java.awt.Dimension(260, 60));
        tab1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab1MouseClicked(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Bảng Thông Tin");

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Info.png"))); // NOI18N

        javax.swing.GroupLayout tab1Layout = new javax.swing.GroupLayout(tab1);
        tab1.setLayout(tab1Layout);
        tab1Layout.setHorizontalGroup(
            tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tab1Layout.setVerticalGroup(
            tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        tab2.setBackground(new java.awt.Color(204, 204, 255));
        tab2.setPreferredSize(new java.awt.Dimension(85, 60));
        tab2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab2MouseClicked(evt);
            }
        });

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/medicine.png"))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Danh sách thuốc");

        javax.swing.GroupLayout tab2Layout = new javax.swing.GroupLayout(tab2);
        tab2.setLayout(tab2Layout);
        tab2Layout.setHorizontalGroup(
            tab2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tab2Layout.setVerticalGroup(
            tab2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(tab2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(7, Short.MAX_VALUE))
        );

        tab3.setBackground(new java.awt.Color(204, 204, 255));
        tab3.setPreferredSize(new java.awt.Dimension(85, 60));
        tab3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab3MouseClicked(evt);
            }
        });

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/table.png"))); // NOI18N

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Bán hàng");

        javax.swing.GroupLayout tab3Layout = new javax.swing.GroupLayout(tab3);
        tab3.setLayout(tab3Layout);
        tab3Layout.setHorizontalGroup(
            tab3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab3Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tab3Layout.setVerticalGroup(
            tab3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab3Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(tab3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        tab4.setBackground(new java.awt.Color(204, 204, 255));
        tab4.setPreferredSize(new java.awt.Dimension(73, 60));
        tab4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab4MouseClicked(evt);
            }
        });

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/customer-review.png"))); // NOI18N

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Danh sách khách hàng");

        javax.swing.GroupLayout tab4Layout = new javax.swing.GroupLayout(tab4);
        tab4.setLayout(tab4Layout);
        tab4Layout.setHorizontalGroup(
            tab4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab4Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tab4Layout.setVerticalGroup(
            tab4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab4Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(tab4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        tab5.setBackground(new java.awt.Color(204, 204, 255));
        tab5.setPreferredSize(new java.awt.Dimension(66, 60));
        tab5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab5MouseClicked(evt);
            }
        });

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bill.png"))); // NOI18N

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Chi tiết hóa đơn");

        javax.swing.GroupLayout tab5Layout = new javax.swing.GroupLayout(tab5);
        tab5.setLayout(tab5Layout);
        tab5Layout.setHorizontalGroup(
            tab5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab5Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel13)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tab5Layout.setVerticalGroup(
            tab5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab5Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(tab5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel12))
                .addContainerGap(8, Short.MAX_VALUE))
        );

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/hospital.png"))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 32)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Nhân viên");

        jLogout.setBackground(new java.awt.Color(255, 102, 102));
        jLogout.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLogout.setText("Đăng xuất");
        jLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLogoutActionPerformed(evt);
            }
        });

        tab6.setBackground(new java.awt.Color(204, 204, 255));
        tab6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab6MouseClicked(evt);
            }
        });

        jLabel45.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(255, 255, 255));
        jLabel45.setText("Danh mục thuốc");

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/vaccine-list.png"))); // NOI18N

        javax.swing.GroupLayout tab6Layout = new javax.swing.GroupLayout(tab6);
        tab6.setLayout(tab6Layout);
        tab6Layout.setHorizontalGroup(
            tab6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel45)
                .addGap(47, 47, 47))
        );
        tab6Layout.setVerticalGroup(
            tab6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab6Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(tab6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel45))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tab2, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
            .addComponent(tab3, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
            .addComponent(tab4, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
            .addComponent(tab5, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
            .addComponent(tab1, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
            .addComponent(tab6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2)
                            .addComponent(jSeparator1)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(jLogout)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(tab1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tab2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(tab6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tab3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tab4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tab5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(88, 88, 88)
                .addComponent(jLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));

        jp6.setBackground(new java.awt.Color(255, 255, 255));

        jLabel46.setFont(new java.awt.Font("Segoe UI", 0, 30)); // NOI18N
        jLabel46.setText("Danh mục thuốc");

        jLabel47.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel47.setText("Tìm kiếm danh mục thuốc");

        searchBtn2.setText("Tìm");
        searchBtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtn2ActionPerformed(evt);
            }
        });

        jLabel49.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel49.setText("Danh mục thuốc");

        Table2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Mã loại", "Tên loại"
            }
        ));
        jScrollPane8.setViewportView(Table2);

        javax.swing.GroupLayout jp6Layout = new javax.swing.GroupLayout(jp6);
        jp6.setLayout(jp6Layout);
        jp6Layout.setHorizontalGroup(
            jp6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp6Layout.createSequentialGroup()
                .addGroup(jp6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel46))
                    .addGroup(jp6Layout.createSequentialGroup()
                        .addGap(182, 182, 182)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jp6Layout.createSequentialGroup()
                        .addGap(343, 343, 343)
                        .addComponent(jLabel49))
                    .addGroup(jp6Layout.createSequentialGroup()
                        .addGap(300, 300, 300)
                        .addGroup(jp6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jp6Layout.createSequentialGroup()
                                .addComponent(searchData2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(searchBtn2))
                            .addComponent(jLabel47))))
                .addContainerGap(448, Short.MAX_VALUE))
        );
        jp6Layout.setVerticalGroup(
            jp6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel46)
                .addGap(24, 24, 24)
                .addComponent(jLabel47)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jp6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchBtn2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchData2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(jLabel49)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(326, Short.MAX_VALUE))
        );

        jp5.setBackground(new java.awt.Color(255, 255, 255));
        jp5.setPreferredSize(new java.awt.Dimension(1138, 919));

        jLabel18.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel18.setText("Chi tiết hóa đơn");

        jLabel28.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabel28.setText("Tìm kiếm hóa đơn");

        jLabel29.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel29.setText("Danh sách bán hàng và chi tiết hóa đơn");

        searchBtn5.setText("Tìm");
        searchBtn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtn5ActionPerformed(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel30.setText("Chi tiết hàng bán");

        Table6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã hóa đơn", "Mã thuốc", "Số lượng", "Đơn giá (VNĐ)", "Thành tiền (VNĐ)"
            }
        ));
        jScrollPane6.setViewportView(Table6);

        Table7.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã hóa đơn", "Ngày bán", "Tổng tiền (VNĐ)", "Tiền giảm (VNĐ)", "Thuế (%)", "Tiền khách trả (VNĐ)", "Tiền thừa (VNĐ)"
            }
        ));
        jScrollPane4.setViewportView(Table7);

        jLabel31.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel31.setText("Bảng bán hàng");

        jBtnIn2.setText("In");
        jBtnIn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnIn2ActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel22.setText("Chọn một hóa đơn cần IN");

        javax.swing.GroupLayout jp5Layout = new javax.swing.GroupLayout(jp5);
        jp5.setLayout(jp5Layout);
        jp5Layout.setHorizontalGroup(
            jp5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp5Layout.createSequentialGroup()
                .addGroup(jp5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel18))
                    .addGroup(jp5Layout.createSequentialGroup()
                        .addGap(348, 348, 348)
                        .addComponent(jLabel29))
                    .addGroup(jp5Layout.createSequentialGroup()
                        .addGap(470, 470, 470)
                        .addComponent(jLabel28))
                    .addGroup(jp5Layout.createSequentialGroup()
                        .addGap(409, 409, 409)
                        .addComponent(searchData5, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(searchBtn5))
                    .addGroup(jp5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jp5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jp5Layout.createSequentialGroup()
                                .addGroup(jp5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jChonHD))
                                .addGap(18, 18, 18)
                                .addComponent(jBtnIn2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 668, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jp5Layout.createSequentialGroup()
                .addGap(128, 128, 128)
                .addComponent(jLabel30)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel31)
                .addGap(248, 248, 248))
        );
        jp5Layout.setVerticalGroup(
            jp5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18)
                .addGap(57, 57, 57)
                .addComponent(jLabel29)
                .addGap(18, 18, 18)
                .addComponent(jLabel28)
                .addGap(8, 8, 8)
                .addGroup(jp5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchData5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(36, 36, 36)
                .addGroup(jp5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(jLabel31))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jp5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jp5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jBtnIn2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jp5Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jChonHD)))
                .addGap(181, 181, 181))
        );

        jp4.setBackground(new java.awt.Color(255, 255, 255));

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel17.setText("Danh sách khách hàng");

        jLabel25.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel25.setText("Tìm kiếm tên khách hàng");

        jLabel26.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel26.setText("Số điện thoại");

        jLabel27.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel27.setText("Tên khách hàng");

        submit.setText("Thêm");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        update.setText("Sửa");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        delete.setText("Xóa");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        reset2.setText("Reset");
        reset2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset2ActionPerformed(evt);
            }
        });

        searchBtn4.setText("Tìm");
        searchBtn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtn4ActionPerformed(evt);
            }
        });

        Table5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Mã khách hàng", "Số điện thoại", "Tên khách hàng"
            }
        ));
        jScrollPane3.setViewportView(Table5);

        javax.swing.GroupLayout jp4Layout = new javax.swing.GroupLayout(jp4);
        jp4.setLayout(jp4Layout);
        jp4Layout.setHorizontalGroup(
            jp4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp4Layout.createSequentialGroup()
                .addGroup(jp4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel17))
                    .addGroup(jp4Layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addGroup(jp4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jp4Layout.createSequentialGroup()
                                .addComponent(jLabel26)
                                .addGap(47, 47, 47)
                                .addComponent(jPhoneKH, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jp4Layout.createSequentialGroup()
                                .addComponent(jLabel27)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jNameKH, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jp4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jp4Layout.createSequentialGroup()
                                .addComponent(submit)
                                .addGap(18, 18, 18)
                                .addComponent(delete))
                            .addGroup(jp4Layout.createSequentialGroup()
                                .addComponent(update)
                                .addGap(18, 18, 18)
                                .addComponent(reset2))))
                    .addGroup(jp4Layout.createSequentialGroup()
                        .addGap(323, 323, 323)
                        .addGroup(jp4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jp4Layout.createSequentialGroup()
                                .addComponent(jLabel25)
                                .addGap(118, 118, 118))
                            .addGroup(jp4Layout.createSequentialGroup()
                                .addComponent(searchData4, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46)
                                .addComponent(searchBtn4)))))
                .addContainerGap(363, Short.MAX_VALUE))
        );
        jp4Layout.setVerticalGroup(
            jp4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17)
                .addGap(18, 18, 18)
                .addGroup(jp4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp4Layout.createSequentialGroup()
                        .addComponent(jPhoneKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jp4Layout.createSequentialGroup()
                        .addGroup(jp4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(submit)
                            .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jp4Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jp4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(jNameKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(update)
                    .addComponent(reset2))
                .addGap(47, 47, 47)
                .addComponent(jLabel25)
                .addGap(18, 18, 18)
                .addGroup(jp4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchData4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn4, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(248, 248, 248))
        );

        jp3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel16.setText("Bán Hàng");

        jLabel32.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel32.setText("Bảng sản phẩm");

        Table3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã thuốc", "Tên thuốc", "Loại", "Giá bán (VNĐ)", "Số lượng", "Hình ảnh"
            }
        ));
        jScrollPane5.setViewportView(Table3);

        jLabel33.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel33.setText("Tìm kiếm tên sản phẩm hoặc mã loại");

        searchData3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchData3ActionPerformed(evt);
            }
        });

        searchBtn3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        searchBtn3.setText("Tìm");
        searchBtn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtn3ActionPerformed(evt);
            }
        });

        jLabel35.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel35.setText("Tên sản phẩm");

        jLabel36.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel36.setText("Giá bán ");

        jLabel37.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel37.setText("Số lượng");

        submitBH.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        submitBH.setText("Thêm");
        submitBH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBHActionPerformed(evt);
            }
        });

        updateBH.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        updateBH.setText("Cập nhật");
        updateBH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBHActionPerformed(evt);
            }
        });

        deleteBH.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        deleteBH.setText("Xóa");
        deleteBH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBHActionPerformed(evt);
            }
        });

        reset1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        reset1.setText("Reset");
        reset1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset1ActionPerformed(evt);
            }
        });

        jLabel38.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel38.setText("Bản chi tiết bán hàng ");

        Table4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã thuốc", "Tên thuốc", "Đơn giá (VNĐ)", "Số lượng", "Thành tiền (VNĐ)"
            }
        ));
        jScrollPane7.setViewportView(Table4);

        jLabel39.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel39.setText("Tổng tiền");

        jLabel40.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel40.setText("VAT");

        jLabel41.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel41.setText("Giảm giá");

        jCBThue.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jCBThue.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "5", "10", "15" }));

        jThanhToan.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jThanhToan.setText("Thanh toán");
        jThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jThanhToanActionPerformed(evt);
            }
        });

        jLabel42.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel42.setText("Tiền Khách trả");

        lblanh2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back_thuoc.jpg"))); // NOI18N

        jLabel44.setText("%");

        jLabel23.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel23.setText("Tiền thừa");

        resetBH.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        resetBH.setText("Reset thông tin bán hàng");
        resetBH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBHActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jp3Layout = new javax.swing.GroupLayout(jp3);
        jp3.setLayout(jp3Layout);
        jp3Layout.setHorizontalGroup(
            jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp3Layout.createSequentialGroup()
                .addGroup(jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp3Layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addGroup(jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jp3Layout.createSequentialGroup()
                                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jp3Layout.createSequentialGroup()
                                            .addGap(205, 205, 205)
                                            .addComponent(jLabel38)
                                            .addGap(179, 179, 179))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jp3Layout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 626, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jp3Layout.createSequentialGroup()
                                    .addGap(142, 142, 142)
                                    .addComponent(jLabel32)
                                    .addGap(77, 77, 77)
                                    .addComponent(jLabel34)))
                            .addGroup(jp3Layout.createSequentialGroup()
                                .addGap(247, 247, 247)
                                .addComponent(lblanh2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jp3Layout.createSequentialGroup()
                                        .addGap(145, 145, 145)
                                        .addGroup(jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel36)
                                            .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(48, 48, 48))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jp3Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel35)
                                        .addGap(18, 18, 18)))
                                .addGroup(jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jNameBH, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSoLuongBH, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jDonGiaBH, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(deleteBH)
                                    .addGroup(jp3Layout.createSequentialGroup()
                                        .addGroup(jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(submitBH)
                                            .addComponent(reset1, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(resetBH)
                                            .addComponent(updateBH, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jp3Layout.createSequentialGroup()
                                .addGroup(jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel33)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jp3Layout.createSequentialGroup()
                                        .addComponent(searchData3)
                                        .addGap(18, 18, 18)
                                        .addComponent(searchBtn3)))
                                .addGap(84, 84, 84)
                                .addGroup(jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jp3Layout.createSequentialGroup()
                                        .addComponent(jLabel40)
                                        .addGap(18, 18, 18)
                                        .addComponent(jCBThue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel44)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel42)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTienKhachTra, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jp3Layout.createSequentialGroup()
                                        .addComponent(jLabel39)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel41)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jGiamGia, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTienThua, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jp3Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabel16)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jp3Layout.setVerticalGroup(
            jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp3Layout.createSequentialGroup()
                .addGroup(jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp3Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel35)
                            .addComponent(jNameBH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(submitBH)
                            .addComponent(updateBH))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(reset1)
                            .addComponent(jDonGiaBH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(resetBH))
                        .addGap(13, 13, 13)
                        .addGroup(jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel37)
                            .addComponent(jSoLuongBH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deleteBH))
                        .addGap(5, 5, 5)
                        .addComponent(jLabel38))
                    .addGroup(jp3Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(lblanh2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jp3Layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(jLabel34))
                            .addGroup(jp3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel32))))
                    .addGroup(jp3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel16)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane5)
                    .addComponent(jScrollPane7))
                .addGap(18, 18, 18)
                .addGroup(jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(jLabel41)
                    .addComponent(jGiamGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel39)
                    .addComponent(jTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23)
                    .addComponent(jTienThua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                        .addComponent(searchData3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(searchBtn3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel40)
                        .addComponent(jCBThue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel44))
                    .addGroup(jp3Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel42)
                            .addComponent(jTienKhachTra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(52, 52, 52)
                .addComponent(jThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(192, Short.MAX_VALUE))
        );

        jp2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 30)); // NOI18N
        jLabel15.setText("Danh sách thuốc ");

        jLabel20.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel20.setText("Tìm kiếm danh sách thuốc ");

        searchBtn1.setText("Tìm");
        searchBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtn1ActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel21.setText("Danh sách thuốc");

        Table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã thuốc", "Tên thuốc", "Tên đơn vị tính", "Loại", "Gia bán (VNĐ)", "Nhà cung cấp", "Hình ảnh", "Số lượng", "Mô tả"
            }
        ));
        jScrollPane2.setViewportView(Table1);

        lblanh1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back_thuoc.jpg"))); // NOI18N

        jLabel24.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel24.setText("Hình thuốc");

        jLabel48.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel48.setText("Tìm kiếm tên thuốc hoặc mã loại");

        javax.swing.GroupLayout jp2Layout = new javax.swing.GroupLayout(jp2);
        jp2.setLayout(jp2Layout);
        jp2Layout.setHorizontalGroup(
            jp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp2Layout.createSequentialGroup()
                .addGroup(jp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel15))
                    .addGroup(jp2Layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(jp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 735, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jp2Layout.createSequentialGroup()
                                .addGroup(jp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblanh1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel24))
                                .addGroup(jp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jp2Layout.createSequentialGroup()
                                        .addGap(234, 234, 234)
                                        .addComponent(jLabel20))
                                    .addGroup(jp2Layout.createSequentialGroup()
                                        .addGap(206, 206, 206)
                                        .addComponent(jLabel48))
                                    .addGroup(jp2Layout.createSequentialGroup()
                                        .addGap(184, 184, 184)
                                        .addComponent(searchData1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(searchBtn1)))
                                .addGap(111, 111, 111))))
                    .addGroup(jp2Layout.createSequentialGroup()
                        .addGap(366, 366, 366)
                        .addComponent(jLabel21)))
                .addContainerGap(316, Short.MAX_VALUE))
        );
        jp2Layout.setVerticalGroup(
            jp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addGap(19, 19, 19)
                .addGroup(jp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblanh1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jp2Layout.createSequentialGroup()
                        .addComponent(jLabel48)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchData1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(searchBtn1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(296, Short.MAX_VALUE))
        );

        jp1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel14.setText("Bảng thông tin");

        javax.swing.GroupLayout jp1Layout = new javax.swing.GroupLayout(jp1);
        jp1.setLayout(jp1Layout);
        jp1Layout.setHorizontalGroup(
            jp1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp1Layout.createSequentialGroup()
                .addGap(510, 510, 510)
                .addComponent(jLabel14)
                .addContainerGap(435, Short.MAX_VALUE))
        );
        jp1Layout.setVerticalGroup(
            jp1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel14)
                .addContainerGap(886, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jp2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jp3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jp4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jp5, javax.swing.GroupLayout.DEFAULT_SIZE, 1412, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jp6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(280, 280, 280)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jp2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jp3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jp4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jp5, javax.swing.GroupLayout.DEFAULT_SIZE, 1014, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jp6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(2, 2, 2)))
        );

        jp2.getAccessibleContext().setAccessibleParent(jp2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1026, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void tab1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab1MouseClicked
        jp1.setVisible(true);
        jp2.setVisible(false);
        jp3.setVisible(false);
        jp4.setVisible(false);
        jp5.setVisible(false);
        jp6.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_tab1MouseClicked
    
    private void tab2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab2MouseClicked
        jp2.setVisible(true);
        jp1.setVisible(false);
        jp3.setVisible(false);
        jp4.setVisible(false);
        jp5.setVisible(false);
        jp6.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_tab2MouseClicked

    private void tab4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab4MouseClicked
        jp4.setVisible(true);
        jp1.setVisible(false);
        jp2.setVisible(false);
        jp3.setVisible(false);
        jp5.setVisible(false);
        jp6.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_tab4MouseClicked

    private void tab5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab5MouseClicked
        jp5.setVisible(true);
        jp1.setVisible(false);
        jp2.setVisible(false);
        jp3.setVisible(false);
        jp4.setVisible(false);
        jp6.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_tab5MouseClicked

    private void tab3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab3MouseClicked
        jp3.setVisible(true);
        jp1.setVisible(false);
        jp2.setVisible(false);
        jp4.setVisible(false);
        jp5.setVisible(false);
        jp6.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_tab3MouseClicked

    private void searchData3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchData3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchData3ActionPerformed

    private void updateBHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBHActionPerformed
        // Lấy thông tin từ các ô nhập liệu
        String tenThuoc = jNameBH.getText();
        String donGiaStr = jDonGiaBH.getText();
        String soLuongStr = jSoLuongBH.getText();

        // Kiểm tra xem ô số lượng có được nhập không và có giá trị hợp lệ không
        if (soLuongStr.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập số lượng.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int soLuong;
        try {
            soLuong = Integer.parseInt(soLuongStr);
            if (soLuong <= 0) {
                JOptionPane.showMessageDialog(this, "Số lượng phải lớn hơn hoặc bằng 1.", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Số lượng không hợp lệ.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Kiểm tra xem ô đơn giá có hợp lệ không
        double donGia;
        try {
            donGia = Double.parseDouble(donGiaStr);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Đơn giá không hợp lệ.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Tính thành tiền
        double thanhTien = donGia * soLuong;

        // Lấy dòng được chọn trong Table4
        int selectedRow = Table4.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn dòng nào trong bảng.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Cập nhật thông tin cho dòng được chọn
        DefaultTableModel model = (DefaultTableModel) Table4.getModel();
        model.setValueAt(tenThuoc, selectedRow, 1); // Cột Tên thuốc
        model.setValueAt(donGia, selectedRow, 2); // Cột Đơn giá
        model.setValueAt(soLuong, selectedRow, 3); // Cột Số lượng
        model.setValueAt(thanhTien, selectedRow, 4); // Cột Thành tiền

        // Cập nhật tổng tiền
        double tongTien = 0;
        for (int i = 0; i < model.getRowCount(); i++) {
            tongTien += (double) model.getValueAt(i, 4); // Cột Thành tiền
        }
        jTongTien.setText(String.valueOf(tongTien));

        // TODO add your handling code here:
    }//GEN-LAST:event_updateBHActionPerformed

    private void searchBtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtn3ActionPerformed
        String searchTerm = searchData3.getText().trim(); // Lấy dữ liệu nhập vào từ ô tìm kiếm

        try {
            // Kết nối đến cơ sở dữ liệu
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:mysql://localhost:3306/qlthuocstore";
            String user = "root";
            String pass = ""; // Mật khẩu của bạn

            Connection con = DriverManager.getConnection(url, user, pass);
            Statement st = con.createStatement();

            String query;
            if (searchTerm.isEmpty()) {
                // Nếu ô tìm kiếm trống, load lại toàn bộ dữ liệu
                query = "SELECT ma_thuoc, ten_thuoc, ma_loai, gia_ban, so_luong, hinhanh FROM Thuoc";
                // Đặt hình ảnh mặc định cho lblanh1
                lblanh2.setIcon(ResizeImage("D:\\DoAn_Java\\QLThuocStore\\src\\main\\resources\\medicine_images\\back_thuoc.jpg"));
            } else {
                // Nếu có từ khóa tìm kiếm, tìm kiếm dữ liệu
                query = "SELECT ma_thuoc, ten_thuoc, ma_loai, gia_ban, so_luong, hinhanh FROM Thuoc WHERE ten_thuoc LIKE '%" + searchTerm + "%' OR ma_loai LIKE '%" + searchTerm + "%'";
            }

            ResultSet rs = st.executeQuery(query);

            // Cập nhật bảng dữ liệu với kết quả tìm kiếm
            DefaultTableModel model = new DefaultTableModel(
                new String[]{"Mã thuốc", "Tên thuốc", "Loại", "Giá bán (VNĐ)", "Số lượng", "Hình ảnh"}, 0);
            Table3.setModel(model);

            while (rs.next()) {
                // Đọc dữ liệu từ ResultSet và thêm vào bảng
                int maThuoc = rs.getInt("ma_thuoc");
                String tenThuoc = rs.getString("ten_thuoc");
                int maLoai = rs.getInt("ma_loai");
                double giaBan = rs.getDouble("gia_ban");
                int soLuong = rs.getInt("so_luong");
                String hinhAnh = rs.getString("hinhanh");

                model.addRow(new Object[]{maThuoc, tenThuoc, maLoai, giaBan, soLuong, hinhAnh});
            }

            // Đóng kết nối
            con.close();

        } catch (Exception e) {
            // Xử lý lỗi
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_searchBtn3ActionPerformed

    private void jLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLogoutActionPerformed
        // Ẩn JFrame Admin
        this.setVisible(false);
        // Hiển thị JFrame Login
        Login.getInstance().setVisible(true);    

        // TODO add your handling code here:
    }//GEN-LAST:event_jLogoutActionPerformed

    private void tab6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab6MouseClicked
        jp6.setVisible(true);
        jp1.setVisible(false);
        jp2.setVisible(false);
        jp3.setVisible(false);
        jp4.setVisible(false);
        jp5.setVisible(false);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_tab6MouseClicked

    private void searchBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtn2ActionPerformed
        String searchTerm = searchData2.getText().trim(); // Lấy dữ liệu từ ô tìm kiếm và loại bỏ khoảng trắng đầu/cuối

        if (searchTerm.isEmpty()) {
            // Nếu ô tìm kiếm trống, tải lại toàn bộ dữ liệu từ bảng Loai
            loadData();
            return;
        }

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:mysql://localhost:3306/qlthuocstore";
            String user = "root";
            String pass = ""; // Mật khẩu của bạn

            Connection con = DriverManager.getConnection(url, user, pass);
            Statement st = con.createStatement();

            // Thực hiện câu lệnh SQL để tìm kiếm
            String query = "SELECT * FROM Loai WHERE ten_loai LIKE '%" + searchTerm + "%'";
            ResultSet rs = st.executeQuery(query);

            // Xóa dữ liệu cũ trong bảng
            DefaultTableModel model = (DefaultTableModel) Table2.getModel();
            model.setRowCount(0);

            // Thêm dữ liệu tìm kiếm vào bảng
            while (rs.next()) {
                int maLoai = rs.getInt("ma_loai");
                String tenLoai = rs.getString("ten_loai");
                model.addRow(new Object[]{maLoai, tenLoai});
            }

            // Đóng kết nối
            con.close();

        } catch (Exception e) {
            // Xử lý lỗi
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_searchBtn2ActionPerformed

    private void searchBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtn1ActionPerformed
        String searchTerm = searchData1.getText().trim(); // Lấy dữ liệu nhập vào từ ô tìm kiếm

        try {
            // Kết nối đến cơ sở dữ liệu
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:mysql://localhost:3306/qlthuocstore";
            String user = "root";
            String pass = ""; // Mật khẩu của bạn

            Connection con = DriverManager.getConnection(url, user, pass);
            Statement st = con.createStatement();

            String query;
            if (searchTerm.isEmpty()) {
                // Nếu ô tìm kiếm trống, load lại toàn bộ dữ liệu
                query = "SELECT * FROM Thuoc";
                
                // Đặt hình ảnh mặc định cho lblanh1
                lblanh1.setIcon(ResizeImage("D:\\DoAn_Java\\QLThuocStore\\src\\main\\resources\\medicine_images\\back_thuoc.jpg"));
            } else {
                // Nếu có từ khóa tìm kiếm, tìm kiếm dữ liệu
                query = "SELECT * FROM Thuoc WHERE ten_thuoc LIKE '%" + searchTerm + "%' OR " +
                        "ma_loai LIKE '%" + searchTerm + "%'";
            }

            ResultSet rs = st.executeQuery(query);

            // Cập nhật bảng dữ liệu với kết quả tìm kiếm
            DefaultTableModel model = new DefaultTableModel(
                new String[]{"Mã thuốc", "Tên thuốc", "Tên đơn vị tính", "Loại", "Giá bán (VNĐ)", "Nhà cung cấp", "Hình ảnh", "Số lượng", "Mô tả"}, 0);
            Table1.setModel(model);

            while (rs.next()) {
                // Đọc dữ liệu từ ResultSet và thêm vào bảng
                int maThuoc = rs.getInt("ma_thuoc");
                String tenThuoc = rs.getString("ten_thuoc");
                String tenDVT = rs.getString("ten_DVT");
                int maloai = rs.getInt("ma_loai");
                double giaBan = rs.getDouble("gia_ban");
                String nhaCc = rs.getString("nha_cc");
                String hinhAnh = rs.getString("hinhanh");
                int soLuong = rs.getInt("so_luong");
                String moTa = rs.getString("mo_ta");

                model.addRow(new Object[]{maThuoc, tenThuoc, tenDVT, maloai, giaBan, nhaCc, hinhAnh, soLuong, moTa});
            }

            // Đóng kết nối
            con.close();

        } catch (Exception e) {
            // Xử lý lỗi
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_searchBtn1ActionPerformed
    
    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        String soDienThoai = jPhoneKH.getText().trim();
        String tenKH = jNameKH.getText().trim();

        // Kiểm tra dữ liệu đầu vào
        if (soDienThoai.isEmpty() || tenKH.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng điền đầy đủ thông tin.", "Thông báo", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Kiểm tra số điện thoại có phải chỉ chứa các chữ số không
        if (!soDienThoai.matches("\\d+")) {
            JOptionPane.showMessageDialog(this, "Số điện thoại phải chỉ chứa các chữ số.", "Thông báo", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Kiểm tra độ dài số điện thoại
        if (soDienThoai.length() != 10) {
            JOptionPane.showMessageDialog(this, "Số điện thoại phải có đúng 10 số.", "Thông báo", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:mysql://localhost:3306/qlthuocstore";
            String user = "root";
            String pass = ""; // Mật khẩu của bạn

            Connection con = DriverManager.getConnection(url, user, pass);
            Statement st = con.createStatement();

            // Kiểm tra xem số điện thoại đã tồn tại trong bảng KhachHang chưa
            String checkQuery = "SELECT COUNT(*) AS count FROM KhachHang WHERE soDienThoai = '" + soDienThoai + "'";
            ResultSet rs = st.executeQuery(checkQuery);
            if (rs.next()) {
                int count = rs.getInt("count");
                if (count > 0) {
                    JOptionPane.showMessageDialog(this, "Số điện thoại đã tồn tại, vui lòng chọn số khác.", "Thông báo", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }

            // Thực hiện chèn dữ liệu vào cơ sở dữ liệu
            String query = "INSERT INTO KhachHang (tenKH, soDienThoai) VALUES ('" + tenKH + "', '" + soDienThoai + "')";
            st.executeUpdate(query);

            JOptionPane.showMessageDialog(this, "Thêm mới thành công.", "Thông báo", JOptionPane.INFORMATION_MESSAGE);

            // Đóng kết nối
            con.close();

            // Làm mới bảng dữ liệu sau khi thêm mới
            loadData();

        } catch (Exception e) {
            // Xử lý lỗi
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_submitActionPerformed

    private void reset2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset2ActionPerformed
        jNameKH.setText("");
        jPhoneKH.setText("");
        
        Table5.clearSelection();

        // TODO add your handling code here:
    }//GEN-LAST:event_reset2ActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        String soDienThoai = jPhoneKH.getText();
        String tenKH = jNameKH.getText();

        // Kiểm tra dữ liệu đầu vào
        if (soDienThoai.isEmpty() || tenKH.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng điền đầy đủ thông tin.", "Thông báo", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Kiểm tra xem số điện thoại có phải là số và có đủ 10 chữ số
        if (!soDienThoai.matches("\\d{10}")) {
            JOptionPane.showMessageDialog(this, "Số điện thoại phải là số và có đủ 10 chữ số.", "Thông báo", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:mysql://localhost:3306/qlthuocstore";
            String user = "root";
            String pass = ""; // Mật khẩu của bạn

            Connection con = DriverManager.getConnection(url, user, pass);
            Statement st = con.createStatement();

            // Lấy mã khách hàng từ dòng được chọn trong Table5
            int selectedRow = Table5.getSelectedRow();
            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn một khách hàng để cập nhật.", "Thông báo", JOptionPane.ERROR_MESSAGE);
                return;
            }

            int maKH = (int) Table5.getValueAt(selectedRow, 0);

            // Kiểm tra xem số điện thoại đã tồn tại chưa, ngoại trừ số điện thoại của khách hàng hiện tại
            String checkQuery = "SELECT COUNT(*) AS count FROM KhachHang WHERE soDienThoai = '" + soDienThoai + "' AND maKH != " + maKH;
            ResultSet rs = st.executeQuery(checkQuery);
            if (rs.next()) {
                int count = rs.getInt("count");
                if (count > 0) {
                    JOptionPane.showMessageDialog(this, "Số điện thoại đã tồn tại, vui lòng chọn số khác.", "Thông báo", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }

            // Thực hiện cập nhật dữ liệu vào cơ sở dữ liệu
            String query = "UPDATE KhachHang SET soDienThoai = '" + soDienThoai + "', tenKH = '" + tenKH + "' WHERE maKH = " + maKH;
            st.executeUpdate(query);

            JOptionPane.showMessageDialog(this, "Cập nhật thành công.", "Thông báo", JOptionPane.INFORMATION_MESSAGE);

            // Đóng kết nối
            con.close();

            // Làm mới bảng dữ liệu sau khi cập nhật
            loadData();

        } catch (Exception e) {
            // Xử lý lỗi
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_updateActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // Lấy chỉ số hàng được chọn
        int selectedRow = Table5.getSelectedRow();

        // Kiểm tra xem người dùng đã chọn hàng nào chưa
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một khách hàng để xóa.", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Xác nhận xóa từ người dùng
        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa khách hàng này?", "Xác nhận", JOptionPane.YES_NO_OPTION);
        if (confirm != JOptionPane.YES_OPTION) {
            return;
        }

        // Lấy số điện thoại của khách hàng từ hàng được chọn
        String soDienThoai = Table5.getValueAt(selectedRow, 1).toString();

        try {
            // Kết nối đến cơ sở dữ liệu
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:mysql://localhost:3306/qlthuocstore";
            String user = "root";
            String pass = ""; // Mật khẩu của bạn

            Connection con = DriverManager.getConnection(url, user, pass);
            Statement st = con.createStatement();

            // Thực hiện xóa khách hàng từ cơ sở dữ liệu
            String query = "DELETE FROM KhachHang WHERE soDienThoai = '" + soDienThoai + "'";
            st.executeUpdate(query);

            // Đóng kết nối
            con.close();

            JOptionPane.showMessageDialog(this, "Xóa khách hàng thành công.", "Thông báo", JOptionPane.INFORMATION_MESSAGE);

            // Cập nhật lại bảng Table5 sau khi xóa
            loadData();

        } catch (Exception e) {
            // Xử lý lỗi
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteActionPerformed

    private void searchBtn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtn4ActionPerformed
        String searchText = searchData4.getText().trim();

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:mysql://localhost:3306/qlthuocstore";
            String user = "root";
            String pass = ""; // Mật khẩu của bạn

            Connection con = DriverManager.getConnection(url, user, pass);
            Statement st = con.createStatement();

            String query;
            if (searchText.isEmpty()) {
                // Nếu ô tìm kiếm trống, load lại toàn bộ dữ liệu
                query = "SELECT * FROM KhachHang";
            } else {
                // Nếu có từ khóa tìm kiếm, tìm kiếm dữ liệu
                query = "SELECT * FROM KhachHang WHERE soDienThoai LIKE '%" + searchText + "%' OR tenKH LIKE '%" + searchText + "%'";
            }

            ResultSet rs = st.executeQuery(query);

            DefaultTableModel model = new DefaultTableModel(
                new String[]{"Mã khách hàng", "Số điện thoại", "Tên khách hàng"}, 0);
            Table5.setModel(model);

            while (rs.next()) {
                int maKH = rs.getInt("maKH");
                String soDienThoai = rs.getString("soDienThoai");
                String tenKH = rs.getString("tenKH");

                model.addRow(new Object[]{maKH, soDienThoai, tenKH});
            }

            if (!searchText.isEmpty() && model.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Không tìm thấy kết quả nào.", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            }

            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_searchBtn4ActionPerformed

    private void submitBHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBHActionPerformed
        // Lấy thông tin từ các ô nhập liệu
    String tenThuoc = jNameBH.getText();
    String donGiaStr = jDonGiaBH.getText();
    String soLuongStr = jSoLuongBH.getText();

    // Kiểm tra xem ô số lượng có được nhập không và có giá trị hợp lệ không
    if (soLuongStr.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Bạn chưa nhập số lượng.", "Lỗi", JOptionPane.ERROR_MESSAGE);
        return;
    }

    int soLuong;
    try {
        soLuong = Integer.parseInt(soLuongStr);
        if (soLuong <= 0) {
            JOptionPane.showMessageDialog(this, "Số lượng phải lớn hơn hoặc bằng 1.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Số lượng không hợp lệ.", "Lỗi", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Kiểm tra xem ô đơn giá có hợp lệ không
    double donGia;
    try {
        donGia = Double.parseDouble(donGiaStr);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Đơn giá không hợp lệ.", "Lỗi", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Tính thành tiền
    double thanhTien = donGia * soLuong;

    // Lấy mã thuốc từ tên thuốc
    int maThuoc = getMaThuocByTenThuoc(tenThuoc);
    if (maThuoc == -1) {
        JOptionPane.showMessageDialog(this, "Tên thuốc không hợp lệ.", "Lỗi", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Kiểm tra xem mã thuốc đã tồn tại trong Table4 chưa
    DefaultTableModel model = (DefaultTableModel) Table4.getModel();
    for (int i = 0; i < model.getRowCount(); i++) {
        if (maThuoc == (int) model.getValueAt(i, 0)) {
            JOptionPane.showMessageDialog(this, "Mã thuốc đã tồn tại trong bảng.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }

    // Thêm dữ liệu vào Table4
    model.addRow(new Object[]{maThuoc, tenThuoc, donGia, soLuong, thanhTien});

    // Cập nhật tổng tiền
    //double tongTien = 0;
    //for (int i = 0; i < model.getRowCount(); i++) {
        //tongTien += (double) model.getValueAt(i, 4);
    //}
    //jTongTien.setText(String.valueOf(tongTien));
    updateTongTien();

        // TODO add your handling code here:
    }//GEN-LAST:event_submitBHActionPerformed

    private void deleteBHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBHActionPerformed
        // Lấy dòng được chọn trong Table4
        int selectedRow = Table4.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn dòng nào trong bảng.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Xác nhận việc xóa
        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa dòng này?", "Xác nhận", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.NO_OPTION) {
            return; // Nếu chọn NO, không thực hiện xóa
        }

        // Xóa dòng được chọn
        DefaultTableModel model = (DefaultTableModel) Table4.getModel();
        model.removeRow(selectedRow);

        // Cập nhật tổng tiền sau khi xóa dòng
        double tongTien = 0;
        for (int i = 0; i < model.getRowCount(); i++) {
            tongTien += (double) model.getValueAt(i, 4); // Cột Thành tiền
        }
        jTongTien.setText(String.valueOf(tongTien));

        // TODO add your handling code here:
    }//GEN-LAST:event_deleteBHActionPerformed

    private void reset1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset1ActionPerformed
        // Đặt các ô nhập liệu về chuỗi rỗng
        jNameBH.setText("");
        jDonGiaBH.setText("");
        jSoLuongBH.setText("");

        // Nếu cần, bạn có thể đặt lại ảnh hiển thị (nếu có)
        lblanh2.setIcon(ResizeImage("D:\\DoAn_Java\\QLThuocStore\\src\\main\\resources\\medicine_images\\back_thuoc.jpg")); // Hoặc đặt hình ảnh mặc định nếu cần

        // TODO add your handling code here:
    }//GEN-LAST:event_reset1ActionPerformed

    private void jThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jThanhToanActionPerformed
        String DB_URL = "jdbc:mysql://localhost:3306/qlthuocstore";
        String USER = "root";
        String PASS = "";

        // Kiểm tra nếu Table4 trống
        if (Table4.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Chưa thực hiện chức năng bán hàng", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Kiểm tra nếu jGiamGia, jTienKhachTra trống
        if (jGiamGia.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Giảm giá không được để trống", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (jTienKhachTra.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Tiền khách trả không được để trống", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Kiểm tra giá trị thuế
        float thue = 0;
        try {
            Object selectedItem = jCBThue.getSelectedItem();
            if (selectedItem != null) {
                String thueText = selectedItem.toString().trim();
                if (!thueText.isEmpty()) {
                    thue = Float.parseFloat(thueText);
                }
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Thuế không hợp lệ", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Xác nhận lưu hóa đơn
        int confirmSave = JOptionPane.showConfirmDialog(null, "Bạn có muốn lưu hóa đơn không?", "Xác nhận", JOptionPane.OK_CANCEL_OPTION);
        if (confirmSave != JOptionPane.OK_OPTION) {
            return;
        }

        try (Connection conn = DriverManager.getConnection(DB_URL, USER, PASS)) {
            conn.setAutoCommit(false);

            // Thực hiện lưu vào bảng BanHang
            String insertBanHang = "INSERT INTO BanHang (tong_tien, tien_giam, thue, tien_kh_tra, tien_thua) VALUES (?, ?, ?, ?, ?)";
            try (PreparedStatement stmtBanHang = conn.prepareStatement(insertBanHang, Statement.RETURN_GENERATED_KEYS)) {
                stmtBanHang.setFloat(1, Float.parseFloat(jTongTien.getText())); // Tổng tiền
                stmtBanHang.setFloat(2, Float.parseFloat(jGiamGia.getText())); // Tiền giảm
                stmtBanHang.setFloat(3, thue); // Thuế
                stmtBanHang.setFloat(4, Float.parseFloat(jTienKhachTra.getText())); // Tiền khách trả
                stmtBanHang.setFloat(5, Float.parseFloat(jTienThua.getText())); // Tiền thừa

                stmtBanHang.executeUpdate();
                ResultSet generatedKeys = stmtBanHang.getGeneratedKeys();
                int maHD = 0;
                if (generatedKeys.next()) {
                    maHD = generatedKeys.getInt(1); // Lấy mã hóa đơn vừa được lưu
                }

                // Thực hiện lưu vào bảng ChiTietBanHang
                String insertChiTietBanHang = "INSERT INTO ChiTietBanHang (ma_hdx, ma_thuoc, so_luong, don_gia, thanh_tien, tien_giam, thue, tong_tien) VALUES (?, ?, ?, ?, ?, ?, ?, ?)";
                try (PreparedStatement stmtChiTiet = conn.prepareStatement(insertChiTietBanHang)) {

                    // Duyệt qua từng dòng trong Table4 và thêm vào ChiTietBanHang
                    for (int i = 0; i < Table4.getRowCount(); i++) {
                        int maThuoc = Integer.parseInt(Table4.getValueAt(i, 0).toString()); // Mã thuốc từ cột Mã thuốc
                        int soLuong = Integer.parseInt(Table4.getValueAt(i, 3).toString()); // Số lượng
                        float donGia = Float.parseFloat(Table4.getValueAt(i, 2).toString()); // Đơn giá
                        float thanhTien = Float.parseFloat(Table4.getValueAt(i, 4).toString()); // Thành tiền
                        float giamGia = Float.parseFloat(jGiamGia.getText()); // Giảm giá

                        // Cập nhật số lượng thuốc trong bảng Thuoc
                        String updateThuoc = "UPDATE Thuoc SET so_luong = so_luong - ? WHERE ma_thuoc = ?";
                        try (PreparedStatement stmtUpdateThuoc = conn.prepareStatement(updateThuoc)) {
                            stmtUpdateThuoc.setInt(1, soLuong);
                            stmtUpdateThuoc.setInt(2, maThuoc);
                            stmtUpdateThuoc.executeUpdate();
                        }

                        // Thêm dữ liệu vào bảng ChiTietBanHang
                        stmtChiTiet.setInt(1, maHD);
                        stmtChiTiet.setInt(2, maThuoc);
                        stmtChiTiet.setInt(3, soLuong);
                        stmtChiTiet.setFloat(4, donGia);
                        stmtChiTiet.setFloat(5, thanhTien);
                        stmtChiTiet.setFloat(6, giamGia);
                        stmtChiTiet.setFloat(7, thue);
                        stmtChiTiet.setFloat(8, Float.parseFloat(jTongTien.getText()));

                        stmtChiTiet.addBatch();
                    }

                    stmtChiTiet.executeBatch();
                }

                conn.commit();
                JOptionPane.showMessageDialog(null, "Hóa đơn đã được lưu thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);

                // Xác nhận in hóa đơn
                int confirmPrint = JOptionPane.showConfirmDialog(null, "Bạn có muốn in hóa đơn không?", "Xác nhận", JOptionPane.OK_CANCEL_OPTION);
                if (confirmPrint == JOptionPane.OK_OPTION) {
                    // Mở hộp thoại lưu file PDF
                    JFileChooser fileChooser = new JFileChooser();
                    fileChooser.setDialogTitle("Chọn nơi lưu và đặt tên file PDF");
                    int userSelection = fileChooser.showSaveDialog(null);
                    if (userSelection == JFileChooser.APPROVE_OPTION) {
                        File fileToSave = fileChooser.getSelectedFile();
                        String filePath = fileToSave.getAbsolutePath();

                        // Gọi hàm tạo PDF
                        createInvoicePDF(maHD, filePath);
                    }
                }

            } catch (SQLException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Lỗi khi lưu hóa đơn: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
            Logger.getLogger(NhanVien.class.getName()).log(Level.SEVERE, null, ex);
        }

        // Xóa dữ liệu trong Table4 và đặt lại các trường về mặc định
        DefaultTableModel model = (DefaultTableModel) Table4.getModel();
        model.setRowCount(0); // Xóa tất cả các dòng trong Table4
        jTongTien.setText("");
        jCBThue.setSelectedIndex(0);
        jGiamGia.setText("");
        jTienKhachTra.setText("");
        jTienThua.setText("");

        // TODO add your handling code here:
    }//GEN-LAST:event_jThanhToanActionPerformed

    private void searchBtn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtn5ActionPerformed
        String searchText = searchData5.getText().trim();

        try {
            // Tải Driver
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:mysql://localhost:3306/qlthuocstore";
            String user = "root";
            String pass = ""; // Mật khẩu của bạn

            Connection con = DriverManager.getConnection(url, user, pass);
            Statement st = con.createStatement();

            String query;
            if (searchText.isEmpty()) {
                // Nếu ô tìm kiếm trống, load lại toàn bộ dữ liệu
                query = "SELECT * FROM BanHang";
            } else {
                // Nếu có từ khóa tìm kiếm, tìm kiếm dữ liệu
                query = "SELECT * FROM BanHang WHERE ma_hdx = " + searchText;
            }

            ResultSet rs = st.executeQuery(query);

            // Định nghĩa các cột của Table7
            DefaultTableModel model = new DefaultTableModel(
                new String[]{"Mã hóa đơn", "Ngày bán", "Tổng tiền (VNĐ)", "Thuế (%)", "Tiền giảm (VNĐ)", "Tiền khách trả (VNĐ)", "Tiền thừa (VNĐ)"}, 0);
            Table7.setModel(model);

            while (rs.next()) {
                int maHD = rs.getInt("ma_hdx");
                Date ngayBan = rs.getDate("ngay_ban");
                double tongTien = rs.getDouble("tong_tien");
                double thue = rs.getDouble("thue");
                double tienGiam = rs.getDouble("tien_giam");
                double tienKhTra = rs.getDouble("tien_kh_tra");
                double tienThua = rs.getDouble("tien_thua");

                model.addRow(new Object[]{maHD, ngayBan, tongTien, thue, tienGiam, tienKhTra, tienThua});
            }

            // Kiểm tra nếu không tìm thấy kết quả
            if (!searchText.isEmpty() && model.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Không tìm thấy hóa đơn với mã hóa đơn: " + searchText, "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            }

            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_searchBtn5ActionPerformed

    private void jBtnIn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnIn2ActionPerformed
        String maHDStr = jChonHD.getText().trim();

        if (maHDStr.isEmpty()) {
            // Nếu ô mã hóa đơn trống, hiển thị thông báo lỗi
            JOptionPane.showMessageDialog(this, "Hãy nhập mã hóa đơn.", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            int maHD = Integer.parseInt(maHDStr); // Chuyển đổi mã hóa đơn sang kiểu int

            // Kết nối với cơ sở dữ liệu để kiểm tra mã hóa đơn
            String DB_URL = "jdbc:mysql://localhost:3306/qlthuocstore";
            String USER = "root";
            String PASS = "";

            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(DB_URL, USER, PASS);
            PreparedStatement ps = con.prepareStatement("SELECT COUNT(*) FROM BanHang WHERE ma_hdx = ?");
            ps.setInt(1, maHD);
            ResultSet rs = ps.executeQuery();
            rs.next();
            int count = rs.getInt(1);

            if (count == 0) {
                // Nếu mã hóa đơn không tồn tại, hiển thị thông báo lỗi
                JOptionPane.showMessageDialog(this, "Mã hóa đơn không tồn tại. Vui lòng nhập mã hóa đơn hợp lệ.", "Thông báo", JOptionPane.WARNING_MESSAGE);
            } else {
                // Gọi phương thức tạo hóa đơn PDF và cho phép người dùng chọn nơi lưu file
                createInvoicePDF(maHD, null);
            }

            con.close();
        } catch (NumberFormatException e) {
            // Nếu mã hóa đơn không phải là số hợp lệ, hiển thị thông báo lỗi
            JOptionPane.showMessageDialog(this, "Mã hóa đơn không hợp lệ. Vui lòng nhập mã hóa đơn đúng định dạng.", "Thông báo", JOptionPane.WARNING_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(NhanVien.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Lỗi cơ sở dữ liệu: " + ex.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(this, "Lỗi kết nối cơ sở dữ liệu: " + e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jBtnIn2ActionPerformed

    private void resetBHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBHActionPerformed
        // Xóa dữ liệu trong Table4 và đặt lại các trường về mặc định
        DefaultTableModel model = (DefaultTableModel) Table4.getModel();
        model.setRowCount(0); // Xóa tất cả các dòng trong Table4
        jTongTien.setText("");
        jCBThue.setSelectedIndex(0);
        jGiamGia.setText("");
        jTienKhachTra.setText("");
        jTienThua.setText("");
        
        // TODO add your handling code here:
    }//GEN-LAST:event_resetBHActionPerformed

    private void updateTongTien() {
        DefaultTableModel model = (DefaultTableModel) Table4.getModel();

        // Tính tổng tiền
        double tongTien = 0;
        for (int i = 0; i < model.getRowCount(); i++) {
            tongTien += (double) model.getValueAt(i, 4); // Cột Thành tiền (VNĐ)
        }

        // Lấy thuế từ jCBThue
        double thue = Double.parseDouble(jCBThue.getSelectedItem().toString());

        // Áp dụng thuế
        double tongTienSauThue = tongTien + (tongTien * thue / 100);

        // Lấy giảm giá từ jGiamGia
        double giamGia;
        try {
            giamGia = Double.parseDouble(jGiamGia.getText());
        } catch (NumberFormatException e) {
            giamGia = 0; // Nếu không nhập giá trị, mặc định là 0
        }

        // Tính tổng tiền sau giảm giá
        double tongTienCuoi = tongTienSauThue - giamGia;

        // Cập nhật ô jTongTien
        jTongTien.setText(String.valueOf(tongTienCuoi));
    }
    
    // Phương thức lấy mã thuốc dựa vào tên thuốc
    private int getMaThuocByTenThuoc(String tenThuoc) {
        int maThuoc = -1;
        String query = "SELECT ma_thuoc FROM Thuoc WHERE ten_thuoc = ?";

        try (Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/qlthuocstore", "root", "");
             PreparedStatement pstmt = conn.prepareStatement(query)) {

            pstmt.setString(1, tenThuoc);
            ResultSet rs = pstmt.executeQuery();

            if (rs.next()) {
                maThuoc = rs.getInt("ma_thuoc");
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }

        return maThuoc;
    }
    
    private void loadData() {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
        String url = "jdbc:mysql://localhost:3306/qlthuocstore";
        String user = "root";
        String pass = ""; // Mật khẩu của bạn

        Connection con = DriverManager.getConnection(url, user, pass);
        Statement st = con.createStatement();

        String query = "SELECT * FROM Loai";
        ResultSet rs = st.executeQuery(query);

        // Xóa dữ liệu cũ trong bảng
        DefaultTableModel model = (DefaultTableModel) Table2.getModel();
        model.setRowCount(0);

        // Thêm dữ liệu vào bảng
        while (rs.next()) {
            int maLoai = rs.getInt("ma_loai");
            String tenLoai = rs.getString("ten_loai");
            model.addRow(new Object[]{maLoai, tenLoai});
        }

            // Đóng kết nối
            con.close();
        } catch (Exception e) {
            // Xử lý lỗi
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
        
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:mysql://localhost:3306/qlthuocstore";
            String user = "root";
            String pass = ""; // Mật khẩu của bạn

            Connection con = DriverManager.getConnection(url, user, pass);
            Statement st = con.createStatement();

            // Truy vấn dữ liệu từ bảng Thuoc
            String query = "SELECT * FROM Thuoc";
            ResultSet rs = st.executeQuery(query);

            // Xóa dữ liệu cũ trong bảng Table1
            DefaultTableModel model = (DefaultTableModel) Table1.getModel();
            model.setRowCount(0);

            // Thêm dữ liệu vào bảng
            while (rs.next()) {
                int maThuoc = rs.getInt("ma_thuoc");
                String tenThuoc = rs.getString("ten_thuoc");
                String tenDVT = rs.getString("ten_dvt");
                int maLoai = rs.getInt("ma_loai");
                double giaBan = rs.getDouble("gia_ban");
                String nhaCC = rs.getString("nha_cc");
                String hinhanh = rs.getString("hinhanh");
                int soLuong = rs.getInt("so_luong");
                String moTa = rs.getString("mo_ta");

                // Thêm dữ liệu vào model của bảng
                model.addRow(new Object[]{maThuoc, tenThuoc, tenDVT, maLoai, giaBan, nhaCC, hinhanh, soLuong, moTa});
            }
            
            // Đóng kết nối
            con.close();
        } catch (Exception e) {
            // Xử lý lỗi
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
        
        // Đọc dữ liệu từ bảng Thuoc và hiển thị trong Table3
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:mysql://localhost:3306/qlthuocstore";
            String user = "root";
            String pass = ""; // Mật khẩu của bạn

            Connection con = DriverManager.getConnection(url, user, pass);
            Statement st = con.createStatement();

            // Truy vấn dữ liệu từ bảng Thuoc
            String query = "SELECT ma_thuoc, ten_thuoc, ma_loai, gia_ban, so_luong, hinhanh FROM Thuoc";
            ResultSet rs = st.executeQuery(query);

            // Xóa dữ liệu cũ trong bảng Table3
            DefaultTableModel model3 = (DefaultTableModel) Table3.getModel();
            model3.setRowCount(0);

            // Thêm dữ liệu vào bảng Table3
            while (rs.next()) {
                int maThuoc = rs.getInt("ma_thuoc");
                String tenThuoc = rs.getString("ten_thuoc");
                int maLoai = rs.getInt("ma_loai");
                double giaBan = rs.getDouble("gia_ban");
                int soLuong = rs.getInt("so_luong");
                String hinhanh = rs.getString("hinhanh");
                model3.addRow(new Object[]{maThuoc, tenThuoc, maLoai, giaBan, soLuong, hinhanh});
            }

            // Đóng kết nối
            con.close();
        } catch (Exception e) {
            // Xử lý lỗi
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
        
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:mysql://localhost:3306/qlthuocstore";
            String user = "root";
            String pass = ""; // Mật khẩu của bạn

            Connection con = DriverManager.getConnection(url, user, pass);
            Statement st = con.createStatement();

            // Lấy dữ liệu từ bảng KhachHang
            String query = "SELECT * FROM KhachHang";
            ResultSet rs = st.executeQuery(query);

            // Cập nhật bảng dữ liệu với kết quả
            DefaultTableModel model = new DefaultTableModel(
                new String[]{"Mã khách hàng", "Số điện thoại", "Tên khách hàng"}, 0);
            Table5.setModel(model);

            while (rs.next()) {
                int maKH = rs.getInt("maKH");
                String soDienThoai = rs.getString("soDienThoai");
                String tenKH = rs.getString("tenKH");

                model.addRow(new Object[]{maKH, soDienThoai, tenKH});
            }

            // Đóng kết nối
            con.close();

        } catch (Exception e) {
            // Xử lý lỗi
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
        
        // Nạp dữ liệu cho Table6
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:mysql://localhost:3306/qlthuocstore";
            String user = "root";
            String pass = "";

            Connection con = DriverManager.getConnection(url, user, pass);
            Statement st = con.createStatement();

            String query = "SELECT * FROM ChiTietBanHang";
            ResultSet rs = st.executeQuery(query);

            DefaultTableModel model6 = new DefaultTableModel(
                new String[]{"Mã hóa đơn", "Mã thuốc", "Số lượng", "Đơn giá (VNĐ)", "Thành tiền (VNĐ)"}, 0);
            Table6.setModel(model6);

            while (rs.next()) {
                int maHD = rs.getInt("ma_hdx");
                int maThuoc = rs.getInt("ma_thuoc");
                int soLuong = rs.getInt("so_luong");
                float donGia = rs.getFloat("don_gia");
                float thanhTien = rs.getFloat("thanh_tien");

                model6.addRow(new Object[]{maHD, maThuoc, soLuong, donGia, thanhTien});
            }

            // Đóng kết nối
            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        }

        // Nạp dữ liệu cho Table7
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:mysql://localhost:3306/qlthuocstore";
            String user = "root";
            String pass = "";

            Connection con = DriverManager.getConnection(url, user, pass);
            Statement st = con.createStatement();

            String query = "SELECT * FROM BanHang";
            ResultSet rs = st.executeQuery(query);

            DefaultTableModel model7 = new DefaultTableModel(
                new String[]{"Mã hóa đơn", "Ngày bán", "Tổng tiền (VNĐ)", "Tiền giảm (VNĐ)", "Thuế (%)", "Tiền khách trả (VNĐ)", "Tiền thừa (VNĐ)"}, 0);
            Table7.setModel(model7);

            while (rs.next()) {
                int maHD = rs.getInt("ma_hdx");
                Date ngayBan = rs.getDate("ngay_ban");
                float tongTien = rs.getFloat("tong_tien");
                float tienGiam = rs.getFloat("tien_giam");
                float thue = rs.getFloat("thue");
                float tienKhachTra = rs.getFloat("tien_kh_tra");
                float tienThua = rs.getFloat("tien_thua");

                model7.addRow(new Object[]{maHD, ngayBan, tongTien, tienGiam, thue, tienKhachTra, tienThua});
            }

            // Đóng kết nối
            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
    }
    

        String duongdananh = null;
    private void Table1MouseClicked(java.awt.event.MouseEvent evt) {                                     
        int selectedRow = Table1.getSelectedRow(); // Lấy dòng được chọn

        if (selectedRow != -1) { // Kiểm tra nếu có dòng được chọn
            String imagePath = (String) Table1.getValueAt(selectedRow, 6); // Lấy đường dẫn hình ảnh từ cột tương ứng (cột 6)

            // Resize và hiển thị hình ảnh trong lblanh1
            ImageIcon imageIcon = ResizeImage(imagePath);
            if (imageIcon != null) {
                lblanh1.setIcon(imageIcon);
            } else {
                lblanh1.setIcon(null); // Nếu không thể tải hình ảnh, đặt lblanh1 không có hình
            }
        }
    }
    
    private void Table3MouseClicked(java.awt.event.MouseEvent evt) {
        // Lấy chỉ số hàng được chọn
        int row = Table3.getSelectedRow();

        // Nếu không có hàng nào được chọn, không làm gì cả
        if (row == -1) return;

        // Lấy dữ liệu từ dòng được chọn
        int maThuoc = (Integer) Table3.getValueAt(row, 0);
        String tenThuoc = (String) Table3.getValueAt(row, 1);
        int maLoai = (Integer) Table3.getValueAt(row, 2);
        double giaBan = (Double) Table3.getValueAt(row, 3);
        int soLuong = (Integer) Table3.getValueAt(row, 4);
        String hinhAnh = (String) Table3.getValueAt(row, 5);

        // Cập nhật thông tin vào các thành phần giao diện
        jNameBH.setText(tenThuoc);
        jDonGiaBH.setText(String.valueOf(giaBan));

        // Cập nhật hình ảnh
        
        String imagePath = (String) Table3.getValueAt(row, 5);
        ImageIcon imageIcon = ResizeImage(imagePath);
        if (imageIcon != null) {
            lblanh2.setIcon(imageIcon);
        } else {
            lblanh2.setIcon(null); // Hiển thị hình ảnh mặc định hoặc không có hình ảnh
            System.out.println("Image not found or could not be loaded."); // Debug thông báo lỗi
        }

        // Vô hiệu hóa các ô nhập liệu
        jNameBH.setEditable(false);
        jDonGiaBH.setEditable(false);
    }
    
    private void initListeners() {
    // Các ListSelectionListener khác

        Table3.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    int row = Table3.getSelectedRow();
                    if (row >= 0) {
                        // Lấy dữ liệu từ dòng được chọn và hiển thị vào các ô trống
                        jNameBH.setText(Table3.getValueAt(row, 1).toString()); // Cột ten_thuoc
                        jDonGiaBH.setText(Table3.getValueAt(row, 3).toString()); // Cột gia_ban

                        // Hiển thị ảnh và lưu đường dẫn hình ảnh hiện tại
                        String currentImagePath = Table3.getValueAt(row, 5).toString(); // Cột hinhanh
                        lblanh2.setIcon(ResizeImage(currentImagePath)); // Hiển thị ảnh

                        // Các thành phần giao diện khác nếu cần
                        jNameBH.setEditable(false);
                        jDonGiaBH.setEditable(false);
                    }
                }
            }
        });
    
    
    // Thêm ListSelectionListener vào Table2
        Table5.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    int row = Table5.getSelectedRow();
                    if (row >= 0) {
                        // Lấy dữ liệu từ dòng được chọn và hiển thị vào các ô trống
                        jNameKH.setText(Table5.getValueAt(row, 2).toString()); // Cột ten_KH
                        jPhoneKH.setText(Table5.getValueAt(row, 1).toString()); // Cột ten_KH
                    }
                }
            }
        });
        
        
        // Thêm ListSelectionListener vào Table4
        Table4.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    int row = Table4.getSelectedRow();
                    if (row >= 0) {
                        // Lấy dữ liệu từ dòng được chọn và hiển thị vào các ô trống
                        jNameBH.setText(Table4.getValueAt(row, 1).toString()); // Cột ten_thuoc
                        jDonGiaBH.setText(Table4.getValueAt(row, 2).toString()); // Cột don_gia
                        jSoLuongBH.setText(Table4.getValueAt(row, 3).toString()); // Cột so_luong
                    }
                }
                
            }
        });
        
        //Không cho phép người dùng chỉnh sửa trong jTongTien
        jTongTien.setEditable(false); // Đặt ô này thành chỉ đọc
        jTienThua.setEditable(false); // Đặt ô này thành chỉ đọc
         // Lắng nghe sự kiện thay đổi của ComboBox jCBThue
        jCBThue.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                updateTongTien(); // Cập nhật tổng tiền khi giá trị thuế thay đổi
            }
        });
        
        jTienKhachTra.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    // Lấy giá trị từ ô jTienKhachTra
                    double tienKhachTra = Double.parseDouble(jTienKhachTra.getText());
                    
                    // Lấy giá trị tổng tiền từ ô jTongTien
                    double tongTien = Double.parseDouble(jTongTien.getText());

                    // Kiểm tra tiền khách trả so với tổng tiền
                    if (tienKhachTra < tongTien) {
                        // Nếu tiền khách trả nhỏ hơn tổng tiền, thông báo lỗi
                        JOptionPane.showMessageDialog(null, "Tiền khách trả không đủ. Vui lòng nhập lại.", "Lỗi", JOptionPane.ERROR_MESSAGE);
                        jTienThua.setText("0"); // Đặt ô tiền thừa về 0
                    } else {
                        // Tính tiền thừa
                        double tienThua = tienKhachTra - tongTien;
                        jTienThua.setText(String.valueOf(tienThua));
                    }
                } catch (NumberFormatException ex) {
                    // Xử lý lỗi nếu giá trị nhập vào không hợp lệ
                    JOptionPane.showMessageDialog(null, "Giá trị nhập vào không hợp lệ.", "Lỗi", JOptionPane.ERROR_MESSAGE);
                    jTienThua.setText("0"); // Đặt ô tiền thừa về 0
                }
            }
        });
        
        // Thêm ActionListener cho jGiamGia
        jGiamGia.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    // Lấy giá trị từ ô jGiamGia
                    double giamGia = Double.parseDouble(jGiamGia.getText());

                    // Kiểm tra giá trị giảm giá
                    if (giamGia < 0) {
                        // Nếu giá trị giảm giá nhỏ hơn 0, thông báo lỗi
                        JOptionPane.showMessageDialog(null, "Giảm giá phải lớn hơn hoặc bằng 0.", "Lỗi", JOptionPane.ERROR_MESSAGE);
                        jGiamGia.setText("0"); // Đặt ô giảm giá về 0
                    } else {
                        // Tính lại tổng tiền sau khi giảm giá
                        double tongTien = Double.parseDouble(jTongTien.getText());
                        double tongTienSauGiamGia = tongTien - giamGia;
                        jTongTien.setText(String.valueOf(tongTienSauGiamGia));
                    }
                } catch (NumberFormatException ex) {
                    // Xử lý lỗi nếu giá trị nhập vào không hợp lệ
                    JOptionPane.showMessageDialog(null, "Giá trị giảm giá không hợp lệ.", "Lỗi", JOptionPane.ERROR_MESSAGE);
                    jGiamGia.setText("0"); // Đặt ô giảm giá về 0
                }
            }
        });
    }
    

    // Phương thức ResizeImage được cập nhật để nhận đúng JLabel lblanh1
    public ImageIcon ResizeImage(String ImagePath)
    {
        // Tạo một ImageIcon từ đường dẫn hình ảnh
        ImageIcon MyImage = new ImageIcon(ImagePath);

        // Kiểm tra xem hình ảnh đã được tải thành công chưa
        if (MyImage.getImageLoadStatus() != MediaTracker.COMPLETE) {
            System.out.println("Không thể tải hình ảnh từ đường dẫn: " + ImagePath);
            return null;
        }

        // Lấy đối tượng Image từ ImageIcon
        Image img = MyImage.getImage();

        // Resize hình ảnh để phù hợp với kích thước JLabel lblanh1
        Image newImg = img.getScaledInstance(lblanh1.getWidth(), lblanh1.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImg);

        return image;
    }
    
    //Hàm thực hiện tạo hóa đơn PDF
    public static void createInvoicePDF(int maHD, String filePath) throws SQLException {
        String DB_URL = "jdbc:mysql://localhost:3306/qlthuocstore";
        String USER = "root";
        String PASS = "";

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Lưu file hóa đơn");
        int userSelection = fileChooser.showSaveDialog(null);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            filePath = fileToSave.getAbsolutePath();

            if (!filePath.endsWith(".pdf")) {
                filePath += ".pdf";
            }

            String fontPath = "fonts/DejaVuSans.ttf"; // Đường dẫn tới font chữ DejaVu Sans

            try (Connection conn = DriverManager.getConnection(DB_URL, USER, PASS)) {
                // Lấy thông tin từ bảng BanHang
                String queryBanHang = "SELECT * FROM BanHang WHERE ma_hdx = ?";
                try (PreparedStatement stmt = conn.prepareStatement(queryBanHang)) {
                    stmt.setInt(1, maHD);
                    ResultSet rsBanHang = stmt.executeQuery();

                    // Tạo tài liệu PDF
                    Document document = new Document(PageSize.A4);
                    PdfWriter.getInstance(document, new FileOutputStream(filePath));
                    document.open();

                    // Font chữ DejaVu Sans
                    Font titleFont = FontFactory.getFont(fontPath, "Identity-H", true, 26);
                    Font subTitleFont = FontFactory.getFont(fontPath, "Identity-H", true, 22);
                    Font normalFont = FontFactory.getFont(fontPath, "Identity-H", true, 18);
                    Font thankYouFont = FontFactory.getFont(fontPath, "Identity-H", true, 19);

                    // Tiêu đề
                    Paragraph title = new Paragraph("CỬA HÀNG BÁN THUỐC MEDICK FLARE", titleFont);
                    title.setAlignment(Element.ALIGN_CENTER);
                    document.add(title);

                    Paragraph subTitle = new Paragraph("Hóa đơn bán hàng", subTitleFont);
                    subTitle.setAlignment(Element.ALIGN_CENTER);
                    document.add(subTitle);

                    // Thêm thông tin hóa đơn
                    if (rsBanHang.next()) {
                        String maHDStr = String.valueOf(rsBanHang.getInt("ma_hdx"));
                        String ngayBanStr = String.valueOf(rsBanHang.getDate("ngay_ban"));
                        double thue = rsBanHang.getDouble("thue");
                        double tienGiam = rsBanHang.getDouble("tien_giam");
                        double tienKhTra = rsBanHang.getDouble("tien_kh_tra");
                        double tienThua = rsBanHang.getDouble("tien_thua");
                        double tongTien = rsBanHang.getDouble("tong_tien");

                        Paragraph maHDParagraph = new Paragraph("Mã hóa đơn: " + maHDStr, normalFont);
                        document.add(maHDParagraph);

                        Paragraph ngayBanParagraph = new Paragraph("Ngày bán: " + ngayBanStr, normalFont);
                        document.add(ngayBanParagraph);

                        // Bảng chi tiết hóa đơn
                        PdfPTable table = new PdfPTable(5);
                        table.setWidthPercentage(100);
                        table.setSpacingBefore(10f);
                        table.setSpacingAfter(10f);

                        // Tiêu đề bảng
                        String[] headers = {"Mã thuốc", "Tên thuốc", "Đơn giá", "Số lượng", "Thành tiền"};
                        for (String header : headers) {
                            PdfPCell headerCell = new PdfPCell(new Phrase(header, normalFont));
                            headerCell.setHorizontalAlignment(Element.ALIGN_CENTER);
                            table.addCell(headerCell);
                        }

                        // Lấy thông tin chi tiết bán hàng
                        String queryChiTiet = "SELECT * FROM ChiTietBanHang WHERE ma_hdx = ?";
                        try (PreparedStatement stmtChiTiet = conn.prepareStatement(queryChiTiet)) {
                            stmtChiTiet.setInt(1, maHD);
                            ResultSet rsChiTiet = stmtChiTiet.executeQuery();

                            while (rsChiTiet.next()) {
                                int maThuoc = rsChiTiet.getInt("ma_thuoc");
                                String queryThuoc = "SELECT ten_thuoc FROM Thuoc WHERE ma_thuoc = ?";
                                try (PreparedStatement stmtThuoc = conn.prepareStatement(queryThuoc)) {
                                    stmtThuoc.setInt(1, maThuoc);
                                    ResultSet rsThuoc = stmtThuoc.executeQuery();

                                    if (rsThuoc.next()) {
                                        table.addCell(new PdfPCell(new Phrase(String.valueOf(maThuoc), normalFont)));
                                        table.addCell(new PdfPCell(new Phrase(rsThuoc.getString("ten_thuoc"), normalFont)));
                                        table.addCell(new PdfPCell(new Phrase(String.valueOf(rsChiTiet.getDouble("don_gia")), normalFont)));
                                        table.addCell(new PdfPCell(new Phrase(String.valueOf(rsChiTiet.getInt("so_luong")), normalFont)));
                                        table.addCell(new PdfPCell(new Phrase(String.valueOf(rsChiTiet.getDouble("thanh_tien")), normalFont)));
                                    }
                                }
                            }
                            document.add(table);

                            // Tổng kết
                            Paragraph vatParagraph = new Paragraph("VAT: " + thue + "%", normalFont);
                            vatParagraph.setAlignment(Element.ALIGN_RIGHT);
                            document.add(vatParagraph);

                            Paragraph tienGiamParagraph = new Paragraph("Tiền giảm: " + tienGiam, normalFont);
                            tienGiamParagraph.setAlignment(Element.ALIGN_RIGHT);
                            document.add(tienGiamParagraph);

                            Paragraph tienKhTraParagraph = new Paragraph("Tiền khách trả: " + tienKhTra, normalFont);
                            tienKhTraParagraph.setAlignment(Element.ALIGN_RIGHT);
                            document.add(tienKhTraParagraph);

                            Paragraph tienThuaParagraph = new Paragraph("Tiền thừa: " + tienThua, normalFont);
                            tienThuaParagraph.setAlignment(Element.ALIGN_RIGHT);
                            document.add(tienThuaParagraph);

                            Paragraph tongTienParagraph = new Paragraph("Tổng tiền: " + tongTien, normalFont);
                            tongTienParagraph.setAlignment(Element.ALIGN_RIGHT);
                            document.add(tongTienParagraph);

                            // Thêm dòng "Cảm ơn khách hàng đã mua thuốc của chúng tôi"
                            Paragraph thankYouParagraph = new Paragraph("Cảm ơn khách hàng đã mua sản phẩm của chúng tôi", thankYouFont);
                            thankYouParagraph.setAlignment(Element.ALIGN_CENTER);
                            document.add(thankYouParagraph);
                        }
                    }

                    document.close();
                    JOptionPane.showMessageDialog(null, "Hóa đơn đã được tạo thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                } catch (SQLException e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, "Lỗi khi truy vấn dữ liệu: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
                } catch (DocumentException | IOException e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, "Lỗi khi tạo file PDF: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                    NhanVien nv = new NhanVien();
                nv.setVisible(true);
                nv.jp1.setVisible(true); // Hiển thị panel jp1 mặc định
                nv.jp2.setVisible(false); // Ẩn panel jp2 ban đầu
                nv.jp3.setVisible(false); // Ẩn panel jp2 ban đầu
                nv.jp4.setVisible(false); // Ẩn panel jp2 ban đầu
                nv.jp5.setVisible(false); // Ẩn panel jp2 ban đầu
                nv.jp6.setVisible(false);
            }
        });
    }
    
    /*
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table1;
    private javax.swing.JTable Table2;
    private javax.swing.JTable Table3;
    private javax.swing.JTable Table4;
    private javax.swing.JTable Table5;
    private javax.swing.JTable Table6;
    private javax.swing.JTable Table7;
    private javax.swing.JButton delete;
    private javax.swing.JButton deleteBH;
    private javax.swing.JButton jBtnIn2;
    private javax.swing.JComboBox<String> jCBThue;
    private javax.swing.JTextField jChonHD;
    private javax.swing.JTextField jDonGiaBH;
    private javax.swing.JTextField jGiamGia;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton jLogout;
    private javax.swing.JTextField jNameBH;
    private javax.swing.JTextField jNameKH;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jPhoneKH;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jSoLuongBH;
    private javax.swing.JButton jThanhToan;
    private javax.swing.JTextField jTienKhachTra;
    private javax.swing.JTextField jTienThua;
    private javax.swing.JTextField jTongTien;
    private javax.swing.JPanel jp1;
    private javax.swing.JPanel jp2;
    private javax.swing.JPanel jp3;
    private javax.swing.JPanel jp4;
    private javax.swing.JPanel jp5;
    private javax.swing.JPanel jp6;
    private javax.swing.JLabel lblanh1;
    private javax.swing.JLabel lblanh2;
    private javax.swing.JButton reset1;
    private javax.swing.JButton reset2;
    private javax.swing.JButton resetBH;
    private javax.swing.JButton searchBtn1;
    private javax.swing.JButton searchBtn2;
    private javax.swing.JButton searchBtn3;
    private javax.swing.JButton searchBtn4;
    private javax.swing.JButton searchBtn5;
    private javax.swing.JTextField searchData1;
    private javax.swing.JTextField searchData2;
    private javax.swing.JTextField searchData3;
    private javax.swing.JTextField searchData4;
    private javax.swing.JTextField searchData5;
    private javax.swing.JButton submit;
    private javax.swing.JButton submitBH;
    private javax.swing.JPanel tab1;
    private javax.swing.JPanel tab2;
    private javax.swing.JPanel tab3;
    private javax.swing.JPanel tab4;
    private javax.swing.JPanel tab5;
    private javax.swing.JPanel tab6;
    private javax.swing.JButton update;
    private javax.swing.JButton updateBH;
    // End of variables declaration//GEN-END:variables
    */
     
    // Variables declaration - do not modify                     
    private javax.swing.JTable Table1;
    private javax.swing.JTable Table2;
    private javax.swing.JTable Table3;
    private javax.swing.JTable Table4;
    private javax.swing.JTable Table5;
    private javax.swing.JTable Table6;
    private javax.swing.JTable Table7;
    private javax.swing.JButton delete;
    private javax.swing.JButton deleteBH;
    private javax.swing.JButton jBtnIn2;
    private javax.swing.JComboBox<String> jCBThue;
    private javax.swing.JTextField jChonHD;
    private javax.swing.JTextField jDonGiaBH;
    private javax.swing.JTextField jGiamGia;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton jLogout;
    private javax.swing.JTextField jNameBH;
    private javax.swing.JTextField jNameKH;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jPhoneKH;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jSoLuongBH;
    private javax.swing.JButton jThanhToan;
    private javax.swing.JTextField jTienKhachTra;
    private javax.swing.JTextField jTienThua;
    private javax.swing.JTextField jTongTien;   
    private javax.swing.JLabel lblanh1;
    private javax.swing.JLabel lblanh2;
    private javax.swing.JButton reset1;
    private javax.swing.JButton reset2;
    private javax.swing.JButton resetBH;
    private javax.swing.JButton searchBtn1;
    private javax.swing.JButton searchBtn2;
    private javax.swing.JButton searchBtn3;
    private javax.swing.JButton searchBtn4;
    private javax.swing.JButton searchBtn5;
    private javax.swing.JTextField searchData1;
    private javax.swing.JTextField searchData2;
    private javax.swing.JTextField searchData3;
    private javax.swing.JTextField searchData4;
    private javax.swing.JTextField searchData5;
    private javax.swing.JButton submit;
    private javax.swing.JButton submitBH;
    private javax.swing.JPanel tab1;
    private javax.swing.JPanel tab2;
    private javax.swing.JPanel tab3;
    private javax.swing.JPanel tab4;
    private javax.swing.JPanel tab5;
    private javax.swing.JPanel tab6;
    private javax.swing.JButton update;
    private javax.swing.JButton updateBH;
    // End of variables declaration                   
}
