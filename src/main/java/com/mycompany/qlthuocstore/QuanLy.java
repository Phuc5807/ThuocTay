/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.qlthuocstore;

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import static com.mycompany.qlthuocstore.NhanVien.createInvoicePDF;
import java.awt.Image;
import java.awt.MediaTracker;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Phuc
 */
public class QuanLy extends javax.swing.JFrame {
    public javax.swing.JPanel jp1;
    public javax.swing.JPanel jp2;
    public javax.swing.JPanel jp3;
    public javax.swing.JPanel jp4;
    public javax.swing.JPanel jp5;
    public javax.swing.JPanel jp6;
    /**
     * Creates new form QuanLy
     */
    public QuanLy() {
        initComponents();
        loadData();
        loadLoaiToComboBox();
        initListeners();
        // Thêm sự kiện ActionListener cho nút jLogout
        jLogout.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                jLogoutActionPerformed(e);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tab1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tab2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tab3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        tab4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        tab5 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        tab6 = new javax.swing.JPanel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLogout = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jp6 = new javax.swing.JPanel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        searchBtn5 = new javax.swing.JButton();
        jLabel44 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        Table6 = new javax.swing.JTable();
        jDateStart = new com.toedter.calendar.JDateChooser();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jDateEnd = new com.toedter.calendar.JDateChooser();
        reset5 = new javax.swing.JButton();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jTongTien = new javax.swing.JTextField();
        jp5 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        searchData4 = new javax.swing.JTextField();
        searchBtn4 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Table4 = new javax.swing.JTable();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Table5 = new javax.swing.JTable();
        jLabel24 = new javax.swing.JLabel();
        jBtnIn1 = new javax.swing.JButton();
        jChonHD = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        jp4 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        searchData3 = new javax.swing.JTextField();
        searchBtn3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table3 = new javax.swing.JTable();
        jp3 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jNameDmThuoc = new javax.swing.JTextField();
        submit2 = new javax.swing.JButton();
        update2 = new javax.swing.JButton();
        delete2 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        searchData2 = new javax.swing.JTextField();
        searchBtn2 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        Table2 = new javax.swing.JTable();
        jp2 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jNameThuoc = new javax.swing.JTextField();
        jNhaCungCap = new javax.swing.JTextField();
        jCBDVT = new javax.swing.JComboBox<>();
        jCbLoaiTrDSThuoc = new javax.swing.JComboBox<>();
        jGiaBan = new javax.swing.JTextField();
        jSoLuongThuoc = new javax.swing.JTextField();
        jMoTa = new javax.swing.JTextField();
        lblanh = new javax.swing.JLabel();
        submit1 = new javax.swing.JButton();
        update1 = new javax.swing.JButton();
        delete1 = new javax.swing.JButton();
        reset1 = new javax.swing.JButton();
        jLabel33 = new javax.swing.JLabel();
        searchData1 = new javax.swing.JTextField();
        searchBtn1 = new javax.swing.JButton();
        jLabel37 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        Table1 = new javax.swing.JTable();
        jLabel38 = new javax.swing.JLabel();
        jBtnImage = new javax.swing.JButton();
        jp1 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 153, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/herbal (1).png"))); // NOI18N
        jLabel1.setText("Medick Flare");

        tab1.setBackground(new java.awt.Color(204, 204, 255));
        tab1.setPreferredSize(new java.awt.Dimension(260, 60));
        tab1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab1MouseClicked(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Bảng Thông Tin");

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Info.png"))); // NOI18N

        javax.swing.GroupLayout tab1Layout = new javax.swing.GroupLayout(tab1);
        tab1.setLayout(tab1Layout);
        tab1Layout.setHorizontalGroup(
            tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tab1Layout.setVerticalGroup(
            tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        tab2.setBackground(new java.awt.Color(204, 204, 255));
        tab2.setPreferredSize(new java.awt.Dimension(85, 60));
        tab2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab2MouseClicked(evt);
            }
        });

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/medicine.png"))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Danh sách thuốc");

        javax.swing.GroupLayout tab2Layout = new javax.swing.GroupLayout(tab2);
        tab2.setLayout(tab2Layout);
        tab2Layout.setHorizontalGroup(
            tab2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tab2Layout.setVerticalGroup(
            tab2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(tab2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        tab3.setBackground(new java.awt.Color(204, 204, 255));
        tab3.setPreferredSize(new java.awt.Dimension(85, 60));
        tab3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab3MouseClicked(evt);
            }
        });

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/table.png"))); // NOI18N

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Danh mục thuốc");

        javax.swing.GroupLayout tab3Layout = new javax.swing.GroupLayout(tab3);
        tab3.setLayout(tab3Layout);
        tab3Layout.setHorizontalGroup(
            tab3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab3Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tab3Layout.setVerticalGroup(
            tab3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab3Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(tab3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        tab4.setBackground(new java.awt.Color(204, 204, 255));
        tab4.setPreferredSize(new java.awt.Dimension(73, 60));
        tab4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab4MouseClicked(evt);
            }
        });

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/customer-review.png"))); // NOI18N

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Danh sách khách hàng");

        javax.swing.GroupLayout tab4Layout = new javax.swing.GroupLayout(tab4);
        tab4.setLayout(tab4Layout);
        tab4Layout.setHorizontalGroup(
            tab4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab4Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tab4Layout.setVerticalGroup(
            tab4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab4Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(tab4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        tab5.setBackground(new java.awt.Color(204, 204, 255));
        tab5.setPreferredSize(new java.awt.Dimension(66, 60));
        tab5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab5MouseClicked(evt);
            }
        });

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bill.png"))); // NOI18N

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Chi tiết hóa đơn");

        javax.swing.GroupLayout tab5Layout = new javax.swing.GroupLayout(tab5);
        tab5.setLayout(tab5Layout);
        tab5Layout.setHorizontalGroup(
            tab5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab5Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel13)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tab5Layout.setVerticalGroup(
            tab5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab5Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(tab5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel12))
                .addContainerGap(8, Short.MAX_VALUE))
        );

        tab6.setBackground(new java.awt.Color(204, 204, 255));
        tab6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab6MouseClicked(evt);
            }
        });

        jLabel39.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(255, 255, 255));
        jLabel39.setText("Thống kê");

        jLabel40.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/line-chart.png"))); // NOI18N

        javax.swing.GroupLayout tab6Layout = new javax.swing.GroupLayout(tab6);
        tab6.setLayout(tab6Layout);
        tab6Layout.setHorizontalGroup(
            tab6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab6Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel40)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel39)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tab6Layout.setVerticalGroup(
            tab6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab6Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(tab6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel40, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel39, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/hospital.png"))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 32)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("QUẢN LÝ");

        jLogout.setBackground(new java.awt.Color(255, 102, 102));
        jLogout.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLogout.setText("Đăng xuất");
        jLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tab2, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
            .addComponent(tab3, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
            .addComponent(tab4, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
            .addComponent(tab5, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
            .addComponent(tab1, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2)
                            .addComponent(jSeparator1)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(jLogout)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(tab6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(tab1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(tab2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tab3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tab4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tab5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tab6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new javax.swing.OverlayLayout(jPanel2));

        jp6.setBackground(new java.awt.Color(255, 255, 255));

        jLabel41.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel41.setText("Thống kê báo cáo");

        jLabel42.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel42.setText("Thống kê danh sách bán hàng ");

        jLabel43.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabel43.setText("Tìm kiếm hóa đơn");

        searchBtn5.setText("Tìm");
        searchBtn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtn5ActionPerformed(evt);
            }
        });

        jLabel44.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel44.setText("Bảng bán hàng");

        Table6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã hóa đơn", "Ngày bán", "Tổng tiền (VNĐ)", "Tiền giảm (VNĐ)", "Thue (%)", "Tien KH Tra (VNĐ)", "Tien Thua (VNĐ)"
            }
        ));
        jScrollPane7.setViewportView(Table6);

        jLabel45.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel45.setText("Thống kê từ ngày");

        jLabel46.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel46.setText("Đến ngày ");

        reset5.setText("Reset");
        reset5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset5ActionPerformed(evt);
            }
        });

        jLabel47.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel47.setText("Tổng tiền:");

        jLabel48.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel48.setText("VNĐ");

        javax.swing.GroupLayout jp6Layout = new javax.swing.GroupLayout(jp6);
        jp6.setLayout(jp6Layout);
        jp6Layout.setHorizontalGroup(
            jp6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp6Layout.createSequentialGroup()
                .addGap(386, 386, 386)
                .addComponent(jLabel42)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jp6Layout.createSequentialGroup()
                .addGroup(jp6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp6Layout.createSequentialGroup()
                        .addGap(442, 442, 442)
                        .addComponent(jLabel43))
                    .addGroup(jp6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel41))
                    .addGroup(jp6Layout.createSequentialGroup()
                        .addGap(487, 487, 487)
                        .addComponent(jLabel44))
                    .addGroup(jp6Layout.createSequentialGroup()
                        .addGap(192, 192, 192)
                        .addGroup(jp6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jp6Layout.createSequentialGroup()
                                .addComponent(jLabel47)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel48))
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 717, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jp6Layout.createSequentialGroup()
                .addGap(374, 374, 374)
                .addGroup(jp6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel46)
                    .addComponent(jLabel45))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jp6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jDateStart, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                    .addComponent(jDateEnd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(jp6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(searchBtn5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(reset5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(472, Short.MAX_VALUE))
        );
        jp6Layout.setVerticalGroup(
            jp6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel41)
                .addGap(77, 77, 77)
                .addComponent(jLabel42)
                .addGap(18, 18, 18)
                .addComponent(jLabel43)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jp6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchBtn5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel45)
                    .addComponent(jDateStart, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jp6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jp6Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel46)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jp6Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jp6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jp6Layout.createSequentialGroup()
                                .addComponent(jDateEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jp6Layout.createSequentialGroup()
                                .addComponent(reset5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)))))
                .addComponent(jLabel44)
                .addGap(12, 12, 12)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jp6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel47)
                    .addComponent(jLabel48)
                    .addComponent(jTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(114, 114, 114))
        );

        jPanel2.add(jp6);

        jp5.setBackground(new java.awt.Color(255, 255, 255));

        jLabel21.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel21.setText("Chi tiết hóa đơn");

        jLabel18.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel18.setText("Danh sách bán hàng và chi tiết hóa đơn");

        jLabel22.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabel22.setText("Tìm kiếm hóa đơn");

        searchBtn4.setText("Tìm");
        searchBtn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtn4ActionPerformed(evt);
            }
        });

        Table4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã hóa đơn", "Mã thuốc", "Số lượng", "Đơn giá (VNĐ)", "Thành tiền (VNĐ)"
            }
        ));
        jScrollPane2.setViewportView(Table4);

        jLabel23.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel23.setText("Bảng bán hàng");

        Table5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã hóa đơn", "Ngày bán", "Tổng tiền (VNĐ)", "Tiền giảm (VNĐ)", "Thuế (%)", "Tiền khách trả (VNĐ)", "Tiền thừa (VNĐ)"
            }
        ));
        jScrollPane3.setViewportView(Table5);

        jLabel24.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel24.setText("Chi tiết hàng bán");

        jBtnIn1.setText("In");
        jBtnIn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnIn1ActionPerformed(evt);
            }
        });

        jChonHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jChonHDActionPerformed(evt);
            }
        });

        jLabel36.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel36.setText("Chọn một hóa đơn cần IN");

        javax.swing.GroupLayout jp5Layout = new javax.swing.GroupLayout(jp5);
        jp5.setLayout(jp5Layout);
        jp5Layout.setHorizontalGroup(
            jp5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 717, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jp5Layout.createSequentialGroup()
                .addGroup(jp5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp5Layout.createSequentialGroup()
                        .addGap(442, 442, 442)
                        .addComponent(jLabel22))
                    .addGroup(jp5Layout.createSequentialGroup()
                        .addGap(319, 319, 319)
                        .addGroup(jp5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addGroup(jp5Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(searchData4, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(searchBtn4, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jp5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel21)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jp5Layout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 431, Short.MAX_VALUE)
                .addComponent(jLabel23)
                .addGap(283, 283, 283))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jp5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jp5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jChonHD))
                .addGap(18, 18, 18)
                .addComponent(jBtnIn1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jp5Layout.setVerticalGroup(
            jp5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jp5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel21)
                .addGap(77, 77, 77)
                .addComponent(jLabel18)
                .addGap(18, 18, 18)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jp5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchData4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(jp5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(jLabel24))
                .addGap(18, 18, 18)
                .addGroup(jp5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jp5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp5Layout.createSequentialGroup()
                        .addComponent(jLabel36)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jChonHD, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jBtnIn1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(74, 74, 74))
        );

        jPanel2.add(jp5);

        jp4.setBackground(new java.awt.Color(255, 255, 255));

        jLabel19.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabel19.setText("Tìm kiếm tên khách hàng hoặc sđt");

        jLabel20.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel20.setText("Quản lý khách hàng");

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel17.setText("Danh sách khách hàng");

        searchBtn3.setText("Tìm");
        searchBtn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtn3ActionPerformed(evt);
            }
        });

        Table3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Ma khách hàng", "Số điện thoại", "Tên khách hàng"
            }
        ));
        jScrollPane1.setViewportView(Table3);

        javax.swing.GroupLayout jp4Layout = new javax.swing.GroupLayout(jp4);
        jp4.setLayout(jp4Layout);
        jp4Layout.setHorizontalGroup(
            jp4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp4Layout.createSequentialGroup()
                .addGroup(jp4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp4Layout.createSequentialGroup()
                        .addGap(358, 358, 358)
                        .addComponent(searchData3, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchBtn3))
                    .addGroup(jp4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel20))
                    .addGroup(jp4Layout.createSequentialGroup()
                        .addGap(355, 355, 355)
                        .addComponent(jLabel19))
                    .addGroup(jp4Layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 866, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jp4Layout.createSequentialGroup()
                        .addGap(380, 380, 380)
                        .addComponent(jLabel17)))
                .addContainerGap(190, Short.MAX_VALUE))
        );
        jp4Layout.setVerticalGroup(
            jp4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel20)
                .addGap(94, 94, 94)
                .addComponent(jLabel17)
                .addGap(18, 18, 18)
                .addComponent(jLabel19)
                .addGap(18, 18, 18)
                .addGroup(jp4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchData3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(192, Short.MAX_VALUE))
        );

        jPanel2.add(jp4);

        jp3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel25.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel25.setText("Danh mục thuốc");

        jLabel26.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel26.setText("Tên danh mục");

        submit2.setText("Thêm");
        submit2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submit2ActionPerformed(evt);
            }
        });

        update2.setText("Sửa");
        update2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update2ActionPerformed(evt);
            }
        });

        delete2.setText("Xóa");
        delete2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete2ActionPerformed(evt);
            }
        });

        jButton7.setText("Reset");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel27.setText("Bảng danh mục thuốc");

        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabel16.setText("Tìm kiếm danh mục thuốc");

        searchBtn2.setText("Tìm");
        searchBtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtn2ActionPerformed(evt);
            }
        });

        Table2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Mã loại ", "Tên loại"
            }
        ));
        jScrollPane4.setViewportView(Table2);

        javax.swing.GroupLayout jp3Layout = new javax.swing.GroupLayout(jp3);
        jp3.setLayout(jp3Layout);
        jp3Layout.setHorizontalGroup(
            jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp3Layout.createSequentialGroup()
                .addGroup(jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp3Layout.createSequentialGroup()
                        .addGap(423, 423, 423)
                        .addGroup(jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jp3Layout.createSequentialGroup()
                                .addComponent(jLabel26)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jNameDmThuoc, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jp3Layout.createSequentialGroup()
                                .addComponent(submit2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(update2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(delete2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7))
                    .addGroup(jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jp3Layout.createSequentialGroup()
                                .addGap(420, 420, 420)
                                .addComponent(jLabel27))
                            .addGroup(jp3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel25))
                            .addGroup(jp3Layout.createSequentialGroup()
                                .addGap(269, 269, 269)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 559, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jp3Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel16)
                            .addGap(18, 18, 18)
                            .addComponent(searchData2, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(searchBtn2))))
                .addContainerGap(355, Short.MAX_VALUE))
        );
        jp3Layout.setVerticalGroup(
            jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel25)
                .addGap(18, 18, 18)
                .addGroup(jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(jNameDmThuoc, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(update2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(submit2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delete2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54)
                .addComponent(jLabel27)
                .addGap(38, 38, 38)
                .addGroup(jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(searchData2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(151, Short.MAX_VALUE))
        );

        jPanel2.add(jp3);

        jp2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel15.setText("Danh sách thuốc");

        jLabel28.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel28.setText("Tên thuốc");

        jLabel29.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel29.setText("Tên DVT");

        jLabel30.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel30.setText("Loại thuốc");

        jLabel31.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel31.setText("Giá bán");

        jLabel32.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel32.setText("Nhà cung cấp");

        jLabel34.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel34.setText("Mô tả");

        jLabel35.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel35.setText("Số lượng");

        jNhaCungCap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jNhaCungCapActionPerformed(evt);
            }
        });

        jCBDVT.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hộp", "Chai", "Lọ", "Ống", "Lốc", "Vỉ", "Gói", "Tuýp" }));

        jCbLoaiTrDSThuoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCbLoaiTrDSThuocActionPerformed(evt);
            }
        });

        lblanh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/medicine_images/back_thuoc.jpg"))); // NOI18N

        submit1.setText("Thêm");
        submit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submit1ActionPerformed(evt);
            }
        });

        update1.setText("Sửa");
        update1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update1ActionPerformed(evt);
            }
        });

        delete1.setText("Xóa");
        delete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete1ActionPerformed(evt);
            }
        });

        reset1.setText("Reset");
        reset1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset1ActionPerformed(evt);
            }
        });

        jLabel33.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel33.setText("Tìm kiếm tên thuốc or tên loại ");

        searchBtn1.setText("Tìm");
        searchBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtn1ActionPerformed(evt);
            }
        });

        jLabel37.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel37.setText("Bảng danh sách thuốc");

        Table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã thuốc", "Tên thuốc", "Tên đơn vị tính", "Loại", "Giá bán (VNĐ)", "Nhà cung cấp", "Hình ảnh", "Số lượng", "Mô tả"
            }
        ));
        jScrollPane5.setViewportView(Table1);

        jLabel38.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel38.setText("Hình ảnh");

        jBtnImage.setText("Chọn hình Ảnh");
        jBtnImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnImageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jp2Layout = new javax.swing.GroupLayout(jp2);
        jp2.setLayout(jp2Layout);
        jp2Layout.setHorizontalGroup(
            jp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp2Layout.createSequentialGroup()
                .addGroup(jp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel15))
                    .addGroup(jp2Layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addGroup(jp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane5)
                            .addGroup(jp2Layout.createSequentialGroup()
                                .addGroup(jp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jp2Layout.createSequentialGroup()
                                        .addGroup(jp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jp2Layout.createSequentialGroup()
                                                .addComponent(jLabel30)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jCbLoaiTrDSThuoc, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(jp2Layout.createSequentialGroup()
                                                .addGroup(jp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel28)
                                                    .addComponent(jLabel29))
                                                .addGap(18, 18, 18)
                                                .addGroup(jp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(jNameThuoc)
                                                    .addComponent(jCBDVT, 0, 155, Short.MAX_VALUE))))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel32)
                                            .addComponent(jLabel31)
                                            .addComponent(jLabel35))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jGiaBan)
                                            .addComponent(jNhaCungCap, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                            .addComponent(jSoLuongThuoc))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel38)
                                            .addComponent(jLabel34))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jMoTa, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jBtnImage, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jp2Layout.createSequentialGroup()
                                        .addComponent(submit1)
                                        .addGap(18, 18, 18)
                                        .addComponent(update1)
                                        .addGap(18, 18, 18)
                                        .addComponent(delete1)
                                        .addGap(18, 18, 18)
                                        .addComponent(reset1)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel33)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(searchData1, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(searchBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblanh))
                                .addGap(67, 67, 67))))
                    .addGroup(jp2Layout.createSequentialGroup()
                        .addGap(371, 371, 371)
                        .addComponent(jLabel37)))
                .addContainerGap(202, Short.MAX_VALUE))
        );
        jp2Layout.setVerticalGroup(
            jp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel15)
                .addGap(18, 18, 18)
                .addGroup(jp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp2Layout.createSequentialGroup()
                        .addGroup(jp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel28)
                            .addComponent(jLabel31)
                            .addComponent(jNameThuoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jGiaBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel34)
                            .addComponent(jMoTa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel29)
                            .addComponent(jLabel32)
                            .addComponent(jNhaCungCap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCBDVT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel38)
                            .addComponent(jBtnImage))
                        .addGap(18, 18, 18)
                        .addGroup(jp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel30)
                            .addComponent(jLabel35)
                            .addComponent(jCbLoaiTrDSThuoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSoLuongThuoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblanh))
                .addGap(18, 18, 18)
                .addGroup(jp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submit1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(update1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delete1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reset1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33)
                    .addComponent(searchData1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(jLabel37)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(160, Short.MAX_VALUE))
        );

        jPanel2.add(jp2);
        jp2.getAccessibleContext().setAccessibleParent(jp2);

        jp1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel14.setText("Bảng thông tin");

        javax.swing.GroupLayout jp1Layout = new javax.swing.GroupLayout(jp1);
        jp1.setLayout(jp1Layout);
        jp1Layout.setHorizontalGroup(
            jp1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jp1Layout.createSequentialGroup()
                .addContainerGap(541, Short.MAX_VALUE)
                .addComponent(jLabel14)
                .addGap(404, 404, 404))
        );
        jp1Layout.setVerticalGroup(
            jp1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addContainerGap(867, Short.MAX_VALUE))
        );

        jPanel2.add(jp1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
  
    
    private void tab1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab1MouseClicked
        jp1.setVisible(true);
        jp2.setVisible(false);
        jp3.setVisible(false);
        jp4.setVisible(false);
        jp5.setVisible(false);
        jp6.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_tab1MouseClicked
    
    private void tab2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab2MouseClicked
        jp2.setVisible(true);
        jp1.setVisible(false);
        jp3.setVisible(false);
        jp4.setVisible(false);
        jp5.setVisible(false);
        jp6.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_tab2MouseClicked

    private void tab3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab3MouseClicked
        jp3.setVisible(true);
        jp1.setVisible(false);
        jp2.setVisible(false);
        jp4.setVisible(false);
        jp5.setVisible(false);
        jp6.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_tab3MouseClicked

    private void tab4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab4MouseClicked
        jp4.setVisible(true);
        jp1.setVisible(false);
        jp2.setVisible(false);
        jp3.setVisible(false);
        jp5.setVisible(false);
        jp6.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_tab4MouseClicked

    private void tab5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab5MouseClicked
        jp5.setVisible(true);
        jp1.setVisible(false);
        jp2.setVisible(false);
        jp3.setVisible(false);
        jp4.setVisible(false);
        jp6.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_tab5MouseClicked
    
    private void jNhaCungCapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jNhaCungCapActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jNhaCungCapActionPerformed

    private void tab6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab6MouseClicked
        jp6.setVisible(true);
        jp1.setVisible(false);
        jp2.setVisible(false);
        jp3.setVisible(false);
        jp4.setVisible(false);
        jp5.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_tab6MouseClicked

    private void jLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLogoutActionPerformed
        // Ẩn JFrame Admin
        this.setVisible(false);
        // Hiển thị JFrame Login
        Login.getInstance().setVisible(true);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jLogoutActionPerformed

    private void loadData() {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:mysql://localhost:3306/qlthuocstore";
            String user = "root";
            String pass = ""; // Mật khẩu của bạn

            Connection con = DriverManager.getConnection(url, user, pass);
            Statement st = con.createStatement();

            String query = "SELECT * FROM Loai";
            ResultSet rs = st.executeQuery(query);

            // Xóa dữ liệu cũ trong bảng
            DefaultTableModel model = (DefaultTableModel) Table2.getModel();
            model.setRowCount(0);

            // Thêm dữ liệu vào bảng
            while (rs.next()) {
                int maLoai = rs.getInt("ma_loai");
                String tenLoai = rs.getString("ten_loai");
                model.addRow(new Object[]{maLoai, tenLoai});
            }

            // Đóng kết nối
            con.close();
        } catch (Exception e) {
            // Xử lý lỗi
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
        
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:mysql://localhost:3306/qlthuocstore";
            String user = "root";
            String pass = ""; // Mật khẩu của bạn

            Connection con = DriverManager.getConnection(url, user, pass);
            Statement st = con.createStatement();

            // Truy vấn dữ liệu từ bảng Thuoc
            String query = "SELECT * FROM Thuoc";
            ResultSet rs = st.executeQuery(query);

            // Xóa dữ liệu cũ trong bảng Table1
            DefaultTableModel model = (DefaultTableModel) Table1.getModel();
            model.setRowCount(0);

            // Thêm dữ liệu vào bảng
            while (rs.next()) {
                int maThuoc = rs.getInt("ma_thuoc");
                String tenThuoc = rs.getString("ten_thuoc");
                String tenDVT = rs.getString("ten_dvt");
                int maLoai = rs.getInt("ma_loai");
                float giaBan = rs.getFloat("gia_ban");
                String nhaCC = rs.getString("nha_cc");
                String hinhanh = rs.getString("hinhanh");
                int soLuong = rs.getInt("so_luong");
                String moTa = rs.getString("mo_ta");

                // Thêm dữ liệu vào model của bảng
                model.addRow(new Object[]{maThuoc, tenThuoc, tenDVT, maLoai, giaBan, nhaCC, hinhanh, soLuong, moTa});
            }

            // Đóng kết nối
            con.close();
        } catch (Exception e) {
            // Xử lý lỗi
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
         
         
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:mysql://localhost:3306/qlthuocstore";
            String user = "root";
            String pass = ""; // Mật khẩu của bạn

            Connection con = DriverManager.getConnection(url, user, pass);
            Statement st = con.createStatement();

            // Lấy dữ liệu từ bảng KhachHang
            String query = "SELECT * FROM KhachHang";
            ResultSet rs = st.executeQuery(query);

            // Cập nhật bảng dữ liệu với kết quả
            DefaultTableModel model = new DefaultTableModel(
                new String[]{"Mã khách hàng", "Số điện thoại", "Tên khách hàng"}, 0);
            Table3.setModel(model);

            while (rs.next()) {
                int maKH = rs.getInt("maKH");
                String soDienThoai = rs.getString("soDienThoai");
                String tenKH = rs.getString("tenKH");

                model.addRow(new Object[]{maKH, soDienThoai, tenKH});
            }

            // Đóng kết nối
            con.close();

        } catch (Exception e) {
            // Xử lý lỗi
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
        
        //Nạp dữ liệu vào Table 4
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:mysql://localhost:3306/qlthuocstore";
            String user = "root";
            String pass = "";

            Connection con = DriverManager.getConnection(url, user, pass);
            Statement st = con.createStatement();

            String query = "SELECT * FROM ChiTietBanHang";
            ResultSet rs = st.executeQuery(query);

            DefaultTableModel model6 = new DefaultTableModel(
                new String[]{"Mã hóa đơn", "Mã thuốc", "Số lượng", "Đơn giá (VNĐ)", "Thành tiền (VNĐ)"}, 0);
            Table4.setModel(model6);

            while (rs.next()) {
                int maHD = rs.getInt("ma_hdx");
                int maThuoc = rs.getInt("ma_thuoc");
                int soLuong = rs.getInt("so_luong");
                float donGia = rs.getFloat("don_gia");
                float thanhTien = rs.getFloat("thanh_tien");

                model6.addRow(new Object[]{maHD, maThuoc, soLuong, donGia, thanhTien});
            }

            // Đóng kết nối
            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
        
        //Nạp dữ liệu vào Table5
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:mysql://localhost:3306/qlthuocstore";
            String user = "root";
            String pass = "";

            Connection con = DriverManager.getConnection(url, user, pass);
            Statement st = con.createStatement();

            String query = "SELECT * FROM BanHang";
            ResultSet rs = st.executeQuery(query);

            DefaultTableModel model7 = new DefaultTableModel(
                new String[]{"Mã hóa đơn", "Ngày bán", "Tổng tiền (VNĐ)", "Tiền giảm (VNĐ)", "Thuế (%)", "Tiền khách trả (VNĐ)", "Tiền thừa (VNĐ)"}, 0);
            Table5.setModel(model7);

            while (rs.next()) {
                int maHD = rs.getInt("ma_hdx");
                Date ngayBan = rs.getDate("ngay_ban");
                float tongTien = rs.getFloat("tong_tien");
                float tienGiam = rs.getFloat("tien_giam");
                float thue = rs.getFloat("thue");
                float tienKhachTra = rs.getFloat("tien_kh_tra");
                float tienThua = rs.getFloat("tien_thua");

                model7.addRow(new Object[]{maHD, ngayBan, tongTien, tienGiam, thue, tienKhachTra, tienThua});
            }

            // Đóng kết nối
            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
        
        //Nạp dữ liệu vào Table5
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:mysql://localhost:3306/qlthuocstore";
            String user = "root";
            String pass = "";

            Connection con = DriverManager.getConnection(url, user, pass);
            Statement st = con.createStatement();

            String query = "SELECT * FROM BanHang";
            ResultSet rs = st.executeQuery(query);

            DefaultTableModel model7 = new DefaultTableModel(
                new String[]{"Mã hóa đơn", "Ngày bán", "Tổng tiền (VNĐ)", "Tiền giảm (VNĐ)", "Thuế (%)", "Tiền khách trả (VNĐ)", "Tiền thừa (VNĐ)"}, 0);
            Table6.setModel(model7);

            while (rs.next()) {
                int maHD = rs.getInt("ma_hdx");
                Date ngayBan = rs.getDate("ngay_ban");
                float tongTien = rs.getFloat("tong_tien");
                float tienGiam = rs.getFloat("tien_giam");
                float thue = rs.getFloat("thue");
                float tienKhachTra = rs.getFloat("tien_kh_tra");
                float tienThua = rs.getFloat("tien_thua");

                model7.addRow(new Object[]{maHD, ngayBan, tongTien, tienGiam, thue, tienKhachTra, tienThua});
            }

            // Đóng kết nối
            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void submit2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submit2ActionPerformed
        String tenLoai = jNameDmThuoc.getText();

        // Kiểm tra dữ liệu đầu vào
        if (tenLoai.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng điền đầy đủ thông tin.", "Thông báo", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:mysql://localhost:3306/qlthuocstore";
            String user = "root";
            String pass = ""; // Mật khẩu của bạn

            Connection con = DriverManager.getConnection(url, user, pass);
            Statement st = con.createStatement();
            
            // Kiểm tra xem ten_loai đã tồn tại trong bảng Loai chưa
            String checkQuery = "SELECT COUNT(*) AS count FROM Loai WHERE ten_loai = '" + tenLoai + "'";
            ResultSet rs = st.executeQuery(checkQuery);
            if (rs.next()) {
                int count = rs.getInt("count");
                if (count > 0) {
                    JOptionPane.showMessageDialog(this, "Tên loại đã tồn tại, vui lòng chọn tên khác.", "Thông báo", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
            
            // Thực hiện chèn dữ liệu vào cơ sở dữ liệu
            String query = "INSERT INTO Loai (ten_loai) VALUES ('" + tenLoai + "')";
            st.executeUpdate(query);

            JOptionPane.showMessageDialog(this, "Thêm mới thành công.", "Thông báo", JOptionPane.INFORMATION_MESSAGE);

            // Đóng kết nối
            con.close();

            // Làm mới bảng dữ liệu sau khi thêm mới
            loadData();
            loadLoaiToComboBox(); 

        } catch (Exception e) {
            // Xử lý lỗi
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        }

        
        // TODO add your handling code here:
    }//GEN-LAST:event_submit2ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        jNameDmThuoc.setText("");

        // Xóa lựa chọn hiện tại trong bảng (nếu có)
        Table2.clearSelection();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void delete2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete2ActionPerformed
        int rowIndex = Table2.getSelectedRow();
    
        // Kiểm tra xem có dòng nào được chọn không
        if (rowIndex == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một dòng để xóa.", "Thông báo", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Lấy giá trị của cột ma_loai từ dòng được chọn
        int maLoai = (int) Table2.getValueAt(rowIndex, 0); // Giả sử ma_loai là cột thứ 0

        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa bản ghi với Mã Loại: " + maLoai + "?", "Xác nhận xóa", JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                String url = "jdbc:mysql://localhost:3306/qlthuocstore";
                String user = "root";
                String pass = ""; // Mật khẩu của bạn

                Connection con = DriverManager.getConnection(url, user, pass);
                Statement st = con.createStatement();
                // Kiểm tra xem mã loại đã được sử dụng trong bảng Thuoc hay chưa
                String checkQuery = "SELECT COUNT(*) AS count FROM Thuoc WHERE ma_loai=" + maLoai;
                ResultSet rs = st.executeQuery(checkQuery);
                if (rs.next()) {
                    int count = rs.getInt("count");
                    if (count > 0) {
                        JOptionPane.showMessageDialog(this, "Loại này đã được sử dụng trong Thuoc, không thể xóa.", "Thông báo", JOptionPane.ERROR_MESSAGE);
                        rs.close();
                        con.close();
                        return;
                    }
                }
                
                // Thực hiện câu lệnh SQL để xóa bản ghi
                String query = "DELETE FROM Loai WHERE ma_loai=" + maLoai;
                int rowsAffected = st.executeUpdate(query);

                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "Xóa thành công.", "Thông báo", JOptionPane.INFORMATION_MESSAGE);

                    // Làm mới bảng dữ liệu
                    loadData();
                    
                    // Cập nhật combobox sau khi xóa
                    loadLoaiToComboBox();
                } else {
                    JOptionPane.showMessageDialog(this, "Không tìm thấy bản ghi để xóa.", "Thông báo", JOptionPane.ERROR_MESSAGE);
                }

                // Đóng kết nối
                con.close();

            } catch (Exception e) {
                // Xử lý lỗi
                JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
            }
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_delete2ActionPerformed

    private void update2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update2ActionPerformed
        int rowIndex = Table2.getSelectedRow();

        // Kiểm tra xem có dòng nào được chọn không
        if (rowIndex == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một dòng để cập nhật.", "Thông báo", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Lấy giá trị của cột ma_loai từ dòng được chọn
        int maLoai = (int) Table2.getValueAt(rowIndex, 0); // Giả sử ma_loai là cột thứ 0

        // Lấy dữ liệu từ ô nhập liệu
        String tenLoai = jNameDmThuoc.getText();

        // Kiểm tra dữ liệu đầu vào
        if (tenLoai.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng điền đầy đủ thông tin.", "Thông báo", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn cập nhật bản ghi với Mã Loại: " + maLoai + "?", "Xác nhận cập nhật", JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                String url = "jdbc:mysql://localhost:3306/qlthuocstore";
                String user = "root";
                String pass = ""; // Mật khẩu của bạn

                Connection con = DriverManager.getConnection(url, user, pass);
                Statement st = con.createStatement();

                // Kiểm tra xem ten_loai đã tồn tại trong bảng Loai chưa
                String checkQuery = "SELECT COUNT(*) AS count FROM Loai WHERE ten_loai = '" + tenLoai + "'";
                ResultSet rs = st.executeQuery(checkQuery);
                if (rs.next()) {
                    int count = rs.getInt("count");
                    if (count > 0) {
                        JOptionPane.showMessageDialog(this, "Tên loại đã tồn tại, vui lòng chọn tên khác.", "Thông báo", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                }
                
                // Thực hiện câu lệnh SQL để cập nhật bản ghi
                String query = "UPDATE Loai SET ten_loai='" + tenLoai + "' WHERE ma_loai=" + maLoai;
                int rowsAffected = st.executeUpdate(query);

                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "Cập nhật thành công.", "Thông báo", JOptionPane.INFORMATION_MESSAGE);

                    // Làm mới bảng dữ liệu
                    loadData();
                    
                    // Cập nhật combobox sau khi cập nhật
                    loadLoaiToComboBox();
                } else {
                    JOptionPane.showMessageDialog(this, "Không tìm thấy bản ghi để cập nhật.", "Thông báo", JOptionPane.ERROR_MESSAGE);
                }

                // Đóng kết nối
                con.close();

            } catch (Exception e) {
                // Xử lý lỗi
                JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
            }
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_update2ActionPerformed

    private void searchBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtn2ActionPerformed
        String searchTerm = searchData2.getText().trim(); // Lấy dữ liệu từ ô tìm kiếm và loại bỏ khoảng trắng đầu/cuối

        if (searchTerm.isEmpty()) {
            // Nếu ô tìm kiếm trống, tải lại toàn bộ dữ liệu từ bảng Loai
            loadData();
            return;
        }

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:mysql://localhost:3306/qlthuocstore";
            String user = "root";
            String pass = ""; // Mật khẩu của bạn

            Connection con = DriverManager.getConnection(url, user, pass);
            Statement st = con.createStatement();

            // Thực hiện câu lệnh SQL để tìm kiếm
            String query = "SELECT * FROM Loai WHERE ten_loai LIKE '%" + searchTerm + "%'";
            ResultSet rs = st.executeQuery(query);

            // Xóa dữ liệu cũ trong bảng
            DefaultTableModel model = (DefaultTableModel) Table2.getModel();
            model.setRowCount(0);

            // Thêm dữ liệu tìm kiếm vào bảng
            while (rs.next()) {
                int maLoai = rs.getInt("ma_loai");
                String tenLoai = rs.getString("ten_loai");
                model.addRow(new Object[]{maLoai, tenLoai});
            }

            // Đóng kết nối
            con.close();

        } catch (Exception e) {
            // Xử lý lỗi
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_searchBtn2ActionPerformed

    
    String duongdananh = null;
    
    public ImageIcon ResizeImage(String ImagePath)
    {
        // Tạo một ImageIcon từ đường dẫn hình ảnh
        ImageIcon MyImage = new ImageIcon(ImagePath);

        // Kiểm tra xem hình ảnh đã được tải thành công chưa
        if (MyImage.getImageLoadStatus() != MediaTracker.COMPLETE) {
            System.out.println("Không thể tải hình ảnh từ đường dẫn: " + ImagePath);
            return null;
        }

        // Lấy đối tượng Image từ ImageIcon
        Image img = MyImage.getImage();

        // Resize hình ảnh để phù hợp với kích thước JLabel
        Image newImg = img.getScaledInstance(lblanh.getWidth(), lblanh.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImg);
    
        return image;
    }
    
    private void jBtnImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnImageActionPerformed
        try {
            JFileChooser fileChooser = new JFileChooser("C:\\Users\\Phuc\\Pictures\\Camera Roll");
            fileChooser.setDialogTitle("Chọn hình ảnh");
            int returnValue = fileChooser.showOpenDialog(null);

            if (returnValue == JFileChooser.APPROVE_OPTION) {
                File selectedFile = fileChooser.getSelectedFile();
                String absolutePath = selectedFile.getAbsolutePath();

                // Cập nhật đường dẫn hình ảnh
                duongdananh = absolutePath.replace("\\", "/");
                currentImagePath = duongdananh; // Cập nhật đường dẫn hình ảnh hiện tại
                // Cập nhật hình ảnh trong JLabel
                ImageIcon resizedImage = ResizeImage(duongdananh);
                if (resizedImage != null) {
                    lblanh.setIcon(resizedImage);
                } else {
                    System.out.println("Không thể hiển thị hình ảnh.");
                }

                // In đường dẫn hình ảnh ra console để kiểm tra
                System.out.println("Đường dẫn hình ảnh: " + duongdananh);
            } else {
                System.out.println("Chưa chọn hình ảnh.");
            }
        } catch (Exception e) {
            System.out.println("Lỗi: " + e.getMessage());
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jBtnImageActionPerformed

    private void jCbLoaiTrDSThuocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCbLoaiTrDSThuocActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCbLoaiTrDSThuocActionPerformed

    private void submit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submit1ActionPerformed
        // Lấy dữ liệu từ các trường nhập liệu
        String tenThuoc = jNameThuoc.getText();
        String tenDVT = (String) jCBDVT.getSelectedItem();
        String loai = (String) jCbLoaiTrDSThuoc.getSelectedItem();
        String giaBanStr = jGiaBan.getText();
        String nhaCC = jNhaCungCap.getText();
        String moTa = jMoTa.getText();
        String soLuongStr = jSoLuongThuoc.getText();
        String hinhAnh = duongdananh;

        // Kiểm tra dữ liệu đầu vào
        if (tenThuoc.isEmpty() || tenDVT == null || loai == null || giaBanStr.isEmpty() || nhaCC.isEmpty() || moTa.isEmpty() || soLuongStr.isEmpty() || hinhAnh.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng điền đầy đủ thông tin.", "Thông báo", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            float giaBan = Float.parseFloat(giaBanStr);
            int soLuong = Integer.parseInt(soLuongStr);

            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:mysql://localhost:3306/qlthuocstore";
            String user = "root";
            String pass = ""; // Mật khẩu của bạn

            Connection con = DriverManager.getConnection(url, user, pass);
            Statement st = con.createStatement();

            // Lấy ma_loai từ bảng Loai dựa trên ten_loai
            String getLoaiQuery = "SELECT ma_loai FROM Loai WHERE ten_loai = '" + loai + "'";
            ResultSet rs = st.executeQuery(getLoaiQuery);
            int maLoai = -1;
            if (rs.next()) {
                maLoai = rs.getInt("ma_loai");
            } else {
                JOptionPane.showMessageDialog(this, "Không tìm thấy loại thuốc.", "Thông báo", JOptionPane.ERROR_MESSAGE);
                con.close();
                return;
            }
            
            // Kiểm tra tên thuốc trùng lặp
            String checkTenThuocQuery = "SELECT COUNT(*) FROM Thuoc WHERE ten_thuoc = '" + tenThuoc + "'";
            rs = st.executeQuery(checkTenThuocQuery);
            rs.next();
            int count = rs.getInt(1);

            if (count > 0) {
                // Nếu tên thuốc đã tồn tại, hiển thị thông báo lỗi
                JOptionPane.showMessageDialog(this, "Tên thuốc đã tồn tại. Vui lòng nhập tên thuốc khác.", "Thông báo", JOptionPane.ERROR_MESSAGE);
                con.close();
                return;
            }
            
            // Thực hiện chèn dữ liệu vào cơ sở dữ liệu
            String query = "INSERT INTO Thuoc (ten_thuoc, ten_dvt, ma_loai, gia_ban, nha_cc, hinhanh, so_luong, mo_ta) VALUES ('"
                    + tenThuoc + "', '" + tenDVT + "', " + maLoai + ", " + giaBan + ", '" + nhaCC + "', '" + hinhAnh + "', " + soLuong + ", '" + moTa + "')";
            st.executeUpdate(query);

            JOptionPane.showMessageDialog(this, "Thêm mới thành công.", "Thông báo", JOptionPane.INFORMATION_MESSAGE);

            // Đóng kết nối
            con.close();

            // Làm mới bảng dữ liệu sau khi thêm mới
            loadData();

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đúng định dạng số cho giá bán và số lượng.", "Thông báo", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        }


        // TODO add your handling code here:
    }//GEN-LAST:event_submit1ActionPerformed

    private void update1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update1ActionPerformed
        int rowIndex = Table1.getSelectedRow();

        // Kiểm tra xem có dòng nào được chọn không
        if (rowIndex == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một dòng để cập nhật.", "Thông báo", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Lấy giá trị của cột ma_thuoc từ dòng được chọn
        int maThuoc = (int) Table1.getValueAt(rowIndex, 0); // Giả sử ma_thuoc là cột thứ 0

        // Lấy dữ liệu từ các ô nhập liệu
        String tenThuoc = jNameThuoc.getText();
        String tenDVT = (String) jCBDVT.getSelectedItem();
        String loai = (String) jCbLoaiTrDSThuoc.getSelectedItem();
        String giaBanStr = jGiaBan.getText();
        String nhaCC = jNhaCungCap.getText();
        String moTa = jMoTa.getText();
        String soLuongStr = jSoLuongThuoc.getText();
        String hinhAnh = duongdananh;

        // Kiểm tra dữ liệu đầu vào
        if (tenThuoc.isEmpty() || tenDVT == null || loai == null || giaBanStr.isEmpty() || nhaCC.isEmpty() || moTa.isEmpty() || soLuongStr.isEmpty() || (hinhAnh != null && hinhAnh.isEmpty())) {
            JOptionPane.showMessageDialog(this, "Vui lòng điền đầy đủ thông tin.", "Thông báo", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            float giaBan = Float.parseFloat(giaBanStr);
            int soLuong = Integer.parseInt(soLuongStr);

            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:mysql://localhost:3306/qlthuocstore";
            String user = "root";
            String pass = ""; // Mật khẩu của bạn

            Connection con = DriverManager.getConnection(url, user, pass);
            Statement st = con.createStatement();

            // Lấy ma_loai từ bảng Loai dựa trên ten_loai
            String getLoaiQuery = "SELECT ma_loai FROM Loai WHERE ten_loai = '" + loai + "'";
            ResultSet rs = st.executeQuery(getLoaiQuery);
            int maLoai = -1;
            if (rs.next()) {
                maLoai = rs.getInt("ma_loai");
            } else {
                JOptionPane.showMessageDialog(this, "Không tìm thấy loại thuốc.", "Thông báo", JOptionPane.ERROR_MESSAGE);
                con.close();
                return;
            }
            
            // Kiểm tra tên thuốc trùng lặp
            String checkTenThuocQuery = "SELECT COUNT(*) FROM Thuoc WHERE ten_thuoc = '" + tenThuoc + "' AND ma_thuoc <> " + maThuoc;
            rs = st.executeQuery(checkTenThuocQuery);
            rs.next();
            int count = rs.getInt(1);

            if (count > 0) {
                // Nếu tên thuốc đã tồn tại, hiển thị thông báo lỗi
                JOptionPane.showMessageDialog(this, "Tên thuốc đã tồn tại. Vui lòng nhập tên thuốc khác.", "Thông báo", JOptionPane.ERROR_MESSAGE);
                con.close();
                return;
            }
            
            // Lấy giá trị hình ảnh hiện tại từ cơ sở dữ liệu
            String getImageQuery = "SELECT hinhanh FROM Thuoc WHERE ma_thuoc=" + maThuoc;
            ResultSet rsImage = st.executeQuery(getImageQuery);
            String currentHinhAnh = null;
            if (rsImage.next()) {
                currentHinhAnh = rsImage.getString("hinhanh");
            }
            
            // Kiểm tra nếu hinhAnh không thay đổi, giữ giá trị hiện tại
            if (hinhAnh == null || hinhAnh.isEmpty()) {
                hinhAnh = currentHinhAnh; // currentHinhAnh là giá trị hình ảnh hiện tại lấy từ cơ sở dữ liệu
            }
            
            
            // Thực hiện câu lệnh SQL để cập nhật bản ghi
            String query = "UPDATE Thuoc SET ten_thuoc='" + tenThuoc + "', ten_dvt='" + tenDVT + "', ma_loai=" + maLoai + ", gia_ban=" + giaBan + ", nha_cc='" + nhaCC + "', hinhanh='" + hinhAnh + "', so_luong=" + soLuong + ", mo_ta='" + moTa + "' WHERE ma_thuoc=" + maThuoc;
            int rowsAffected = st.executeUpdate(query);

            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Cập nhật thành công.", "Thông báo", JOptionPane.INFORMATION_MESSAGE);

                // Làm mới bảng dữ liệu
                loadData();
            } else {
                JOptionPane.showMessageDialog(this, "Không tìm thấy bản ghi để cập nhật.", "Thông báo", JOptionPane.ERROR_MESSAGE);
            }

            // Đóng kết nối
            con.close();

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đúng định dạng số cho giá bán và số lượng.", "Thông báo", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_update1ActionPerformed

    private void reset1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset1ActionPerformed
        // Làm trống các ô nhập liệu
        jNameThuoc.setText("");
        jCBDVT.setSelectedIndex(0);
        jCbLoaiTrDSThuoc.setSelectedIndex(0);
        jGiaBan.setText("");
        jNhaCungCap.setText("");
        jMoTa.setText("");
        jSoLuongThuoc.setText("");

        // Đặt lại JLabel hình ảnh về trạng thái mặc định
        String defaultImagePath = "D:/DoAn_Java/QLThuocStore/src/main/resources/medicine_images/back_thuoc.jpg"; // Đường dẫn tới hình ảnh mặc định
        lblanh.setIcon(ResizeImage(defaultImagePath));

        // Đặt lại biến lưu hàng được chọn (nếu có)
        Table1.clearSelection();

        // TODO add your handling code here:
    }//GEN-LAST:event_reset1ActionPerformed

    private void delete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete1ActionPerformed
        int rowIndex = Table1.getSelectedRow();

        // Kiểm tra xem có dòng nào được chọn không
        if (rowIndex == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một dòng để xóa.", "Thông báo", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Lấy giá trị của cột ma_thuoc từ dòng được chọn
        int maThuoc = (int) Table1.getValueAt(rowIndex, 0); // Giả sử ma_thuoc là cột thứ 0

        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa bản ghi với Mã Thuốc: " + maThuoc + "?", "Xác nhận xóa", JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                String url = "jdbc:mysql://localhost:3306/qlthuocstore";
                String user = "root";
                String pass = ""; // Mật khẩu của bạn

                Connection con = DriverManager.getConnection(url, user, pass);
                Statement st = con.createStatement();
                
                // Kiểm tra mã thuốc trong bảng ChiTietBanHang
                String checkQuery = "SELECT COUNT(*) FROM ChiTietBanHang WHERE ma_thuoc = " + maThuoc;
                ResultSet rs = st.executeQuery(checkQuery);
                rs.next();
                int count = rs.getInt(1);

                if (count > 0) {
                    JOptionPane.showMessageDialog(this, "Không thể xóa mã thuốc này vì nó tồn tại trong bảng ChiTietBanHang.", "Thông báo", JOptionPane.ERROR_MESSAGE);
                    con.close();
                    return;
                }
                
                // Thực hiện câu lệnh SQL để xóa bản ghi
                String query = "DELETE FROM Thuoc WHERE ma_thuoc=" + maThuoc;
                int rowsAffected = st.executeUpdate(query);

                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "Xóa thành công.", "Thông báo", JOptionPane.INFORMATION_MESSAGE);

                    // Làm mới bảng dữ liệu
                    loadData();

                } else {
                    JOptionPane.showMessageDialog(this, "Không tìm thấy bản ghi để xóa.", "Thông báo", JOptionPane.ERROR_MESSAGE);
                }

                // Đóng kết nối
                con.close();

            } catch (Exception e) {
                // Xử lý lỗi
                JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
            }
        }

        
        // TODO add your handling code here:
    }//GEN-LAST:event_delete1ActionPerformed

    private void searchBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtn1ActionPerformed
        String searchTerm = searchData1.getText().trim(); // Lấy dữ liệu nhập vào từ ô tìm kiếm

        try {
            // Kết nối đến cơ sở dữ liệu
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:mysql://localhost:3306/qlthuocstore";
            String user = "root";
            String pass = ""; // Mật khẩu của bạn

            Connection con = DriverManager.getConnection(url, user, pass);
            Statement st = con.createStatement();

            String query;
            if (searchTerm.isEmpty()) {
                // Nếu ô tìm kiếm trống, load lại toàn bộ dữ liệu
                query = "SELECT * FROM Thuoc";
                
                // Đặt hình ảnh mặc định cho lblanh1
                lblanh.setIcon(ResizeImage("D:\\DoAn_Java\\QLThuocStore\\src\\main\\resources\\medicine_images\\back_thuoc.jpg"));
            } else {
                // Nếu có từ khóa tìm kiếm, tìm kiếm dữ liệu
                query = "SELECT * FROM Thuoc WHERE ten_thuoc LIKE '%" + searchTerm + "%' OR " +
                        "ma_loai LIKE '%" + searchTerm + "%'";
            }

            ResultSet rs = st.executeQuery(query);

            // Cập nhật bảng dữ liệu với kết quả tìm kiếm
            DefaultTableModel model = new DefaultTableModel(
                new String[]{"Mã thuốc", "Tên thuốc", "Tên đơn vị tính", "Loại", "Giá bán (VNĐ)", "Nhà cung cấp", "Hình ảnh", "Số lượng", "Mô tả"}, 0);
            Table1.setModel(model);

            while (rs.next()) {
                // Đọc dữ liệu từ ResultSet và thêm vào bảng
                int maThuoc = rs.getInt("ma_thuoc");
                String tenThuoc = rs.getString("ten_thuoc");
                String tenDVT = rs.getString("ten_DVT");
                int maloai = rs.getInt("ma_loai");
                double giaBan = rs.getDouble("gia_ban");
                String nhaCc = rs.getString("nha_cc");
                String hinhAnh = rs.getString("hinhanh");
                int soLuong = rs.getInt("so_luong");
                String moTa = rs.getString("mo_ta");

                model.addRow(new Object[]{maThuoc, tenThuoc, tenDVT, maloai, giaBan, nhaCc, hinhAnh, soLuong, moTa});
            }

            // Đóng kết nối
            con.close();

        } catch (Exception e) {
            // Xử lý lỗi
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_searchBtn1ActionPerformed

    private void searchBtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtn3ActionPerformed
        String searchText = searchData3.getText().trim();

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:mysql://localhost:3306/qlthuocstore";
            String user = "root";
            String pass = ""; // Mật khẩu của bạn

            Connection con = DriverManager.getConnection(url, user, pass);
            Statement st = con.createStatement();

            String query;
            if (searchText.isEmpty()) {
                // Nếu ô tìm kiếm trống, load lại toàn bộ dữ liệu
                query = "SELECT * FROM KhachHang";
            } else {
                // Nếu có từ khóa tìm kiếm, tìm kiếm dữ liệu
                query = "SELECT * FROM KhachHang WHERE soDienThoai LIKE '%" + searchText + "%' OR tenKH LIKE '%" + searchText + "%'";
            }

            ResultSet rs = st.executeQuery(query);

            DefaultTableModel model = new DefaultTableModel(
                new String[]{"Mã khách hàng", "Số điện thoại", "Tên khách hàng"}, 0);
            Table3.setModel(model);

            while (rs.next()) {
                int maKH = rs.getInt("maKH");
                String soDienThoai = rs.getString("soDienThoai");
                String tenKH = rs.getString("tenKH");

                model.addRow(new Object[]{maKH, soDienThoai, tenKH});
            }

            if (!searchText.isEmpty() && model.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Không tìm thấy kết quả nào.", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            }

            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_searchBtn3ActionPerformed

    private void jChonHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jChonHDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jChonHDActionPerformed

    private void searchBtn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtn4ActionPerformed
        String searchText = searchData4.getText().trim();

        try {
            // Tải Driver
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:mysql://localhost:3306/qlthuocstore";
            String user = "root";
            String pass = ""; // Mật khẩu của bạn

            Connection con = DriverManager.getConnection(url, user, pass);
            Statement st = con.createStatement();

            String query;
            if (searchText.isEmpty()) {
                // Nếu ô tìm kiếm trống, load lại toàn bộ dữ liệu
                query = "SELECT * FROM BanHang";
            } else {
                // Nếu có từ khóa tìm kiếm, tìm kiếm dữ liệu
                query = "SELECT * FROM BanHang WHERE ma_hdx = " + searchText;
            }

            ResultSet rs = st.executeQuery(query);

            // Định nghĩa các cột của Table7
            DefaultTableModel model = new DefaultTableModel(
                new String[]{"Mã hóa đơn", "Ngày bán", "Tổng tiền (VNĐ)", "Thuế (%)", "Tiền giảm (VNĐ)", "Tiền khách trả (VNĐ)", "Tiền thừa (VNĐ)"}, 0);
            Table5.setModel(model);

            while (rs.next()) {
                int maHD = rs.getInt("ma_hdx");
                Date ngayBan = rs.getDate("ngay_ban");
                double tongTien = rs.getDouble("tong_tien");
                double thue = rs.getDouble("thue");
                double tienGiam = rs.getDouble("tien_giam");
                double tienKhTra = rs.getDouble("tien_kh_tra");
                double tienThua = rs.getDouble("tien_thua");

                model.addRow(new Object[]{maHD, ngayBan, tongTien, thue, tienGiam, tienKhTra, tienThua});
            }

            // Kiểm tra nếu không tìm thấy kết quả
            if (!searchText.isEmpty() && model.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Không tìm thấy hóa đơn với mã hóa đơn: " + searchText, "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            }

            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_searchBtn4ActionPerformed

    private void jBtnIn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnIn1ActionPerformed
        String maHDStr = jChonHD.getText().trim();

        if (maHDStr.isEmpty()) {
            // Nếu ô mã hóa đơn trống, hiển thị thông báo lỗi
            JOptionPane.showMessageDialog(this, "Hãy nhập mã hóa đơn.", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            int maHD = Integer.parseInt(maHDStr); // Chuyển đổi mã hóa đơn sang kiểu int

            // Kết nối với cơ sở dữ liệu để kiểm tra mã hóa đơn
            String DB_URL = "jdbc:mysql://localhost:3306/qlthuocstore";
            String USER = "root";
            String PASS = "";

            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(DB_URL, USER, PASS);
            PreparedStatement ps = con.prepareStatement("SELECT COUNT(*) FROM BanHang WHERE ma_hdx = ?");
            ps.setInt(1, maHD);
            ResultSet rs = ps.executeQuery();
            rs.next();
            int count = rs.getInt(1);

            if (count == 0) {
                // Nếu mã hóa đơn không tồn tại, hiển thị thông báo lỗi
                JOptionPane.showMessageDialog(this, "Mã hóa đơn không tồn tại. Vui lòng nhập mã hóa đơn hợp lệ.", "Thông báo", JOptionPane.WARNING_MESSAGE);
            } else {
                // Gọi phương thức tạo hóa đơn PDF và cho phép người dùng chọn nơi lưu file
                createInvoicePDF(maHD, null);
            }

            con.close();
        } catch (NumberFormatException e) {
            // Nếu mã hóa đơn không phải là số hợp lệ, hiển thị thông báo lỗi
            JOptionPane.showMessageDialog(this, "Mã hóa đơn không hợp lệ. Vui lòng nhập mã hóa đơn đúng định dạng.", "Thông báo", JOptionPane.WARNING_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(NhanVien.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Lỗi cơ sở dữ liệu: " + ex.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(this, "Lỗi kết nối cơ sở dữ liệu: " + e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
         
        // TODO add your handling code here:
    }//GEN-LAST:event_jBtnIn1ActionPerformed

    private void reset5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset5ActionPerformed
        // Làm trống các ô chọn ngày
        jDateStart.setDate(null);
        jDateEnd.setDate(null);

        // Đặt lại ô tổng tiền về giá trị 0
        jTongTien.setText("0");

        // Kết nối với cơ sở dữ liệu
        String DB_URL = "jdbc:mysql://localhost:3306/qlthuocstore";
        String USER = "root";
        String PASS = "";

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(DB_URL, USER, PASS);
            Statement st = con.createStatement();

            // Load lại toàn bộ dữ liệu từ bảng BanHang vào Table6
            String query = "SELECT * FROM BanHang";
            ResultSet rs = st.executeQuery(query);

            DefaultTableModel model = new DefaultTableModel(
                new String[]{"Mã hóa đơn", "Ngày bán", "Tổng tiền (VNĐ)", "Tiền giảm (VNĐ)", "Thuế (%)", "Tiền khách trả (VNĐ)", "Tiền thừa (VNĐ)"}, 0);
            Table6.setModel(model);

            while (rs.next()) {
                int maHD = rs.getInt("ma_hdx");
                Date ngayBan = rs.getDate("ngay_ban");
                double thue = rs.getDouble("thue");
                double tienGiam = rs.getDouble("tien_giam");
                double tienKhTra = rs.getDouble("tien_kh_tra");
                double tienThua = rs.getDouble("tien_thua");
                double tongTien = rs.getDouble("tong_tien");

                model.addRow(new Object[]{maHD, ngayBan, tongTien, tienGiam, thue, tienKhTra, tienThua});
            }

            // Tính tổng tiền của các hóa đơn
            String totalQuery = "SELECT SUM(tong_tien) AS total FROM BanHang";
            ResultSet totalRs = st.executeQuery(totalQuery);

            if (totalRs.next()) {
                double totalAmount = totalRs.getDouble("total");
                jTongTien.setText(String.valueOf(totalAmount));
            }

            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_reset5ActionPerformed

    private void searchBtn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtn5ActionPerformed
        // Lấy ngày bắt đầu và ngày kết thúc từ các ô nhập liệu
        java.util.Date startDateUtil = jDateStart.getDate();
        java.util.Date endDateUtil = jDateEnd.getDate();
        java.util.Date currentDateUtil = new java.util.Date(); // Ngày hiện tại

        if (startDateUtil == null || endDateUtil == null) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn ngày bắt đầu và ngày kết thúc.", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Chuyển đổi java.util.Date thành java.sql.Date
        java.sql.Date startDate = new java.sql.Date(startDateUtil.getTime());
        java.sql.Date endDate = new java.sql.Date(endDateUtil.getTime());
        java.sql.Date currentDate = new java.sql.Date(currentDateUtil.getTime());

        // Kiểm tra các điều kiện ngày
        if (startDate.after(currentDate)) {
            JOptionPane.showMessageDialog(this, "Ngày bắt đầu phải nhỏ hơn hoặc bằng ngày hiện tại.", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (endDate.after(currentDate)) {
            JOptionPane.showMessageDialog(this, "Ngày kết thúc phải nhỏ hơn hoặc bằng ngày hiện tại.", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (startDate.after(endDate)) {
            JOptionPane.showMessageDialog(this, "Ngày bắt đầu phải nhỏ hơn hoặc bằng ngày kết thúc.", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Kết nối với cơ sở dữ liệu
        String DB_URL = "jdbc:mysql://localhost:3306/qlthuocstore";
        String USER = "root";
        String PASS = "";

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(DB_URL, USER, PASS);
            Statement st = con.createStatement();

            // Câu truy vấn tìm hóa đơn trong khoảng thời gian đã chọn
            String query = "SELECT * FROM BanHang WHERE ngay_ban BETWEEN '" +
                            startDate + "' AND '" +
                            endDate + "'";
            ResultSet rs = st.executeQuery(query);

            DefaultTableModel model = new DefaultTableModel(
                new String[]{"Mã hóa đơn", "Ngày bán", "Tổng tiền (VNĐ)", "Tiền giảm (VNĐ)", "Thue (%)", "Tiền khách trả (VNĐ)", "Tiền thừa (VNĐ)"}, 0);
            Table6.setModel(model);

            double totalAmount = 0;

            while (rs.next()) {
                int maHD = rs.getInt("ma_hdx");
                java.sql.Date ngayBan = rs.getDate("ngay_ban");
                double tongTien = rs.getDouble("tong_tien");
                double tienGiam = rs.getDouble("tien_giam");
                double thue = rs.getDouble("thue");
                double tienKhTra = rs.getDouble("tien_kh_tra");
                double tienThua = rs.getDouble("tien_thua");
                model.addRow(new Object[]{maHD, ngayBan, tongTien, tienGiam, thue, tienKhTra, tienThua});
                totalAmount += tongTien;
            }

            // Cập nhật tổng tiền vào ô jTongTien
            jTongTien.setText(String.valueOf(totalAmount));

            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_searchBtn5ActionPerformed
   
    private Map<Integer, String> maLoaiToTenLoaiMap = new HashMap<>();
    
    private void loadLoaiToComboBox() {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:mysql://localhost:3306/qlthuocstore";
            String user = "root";
            String pass = ""; // Mật khẩu của bạn

            Connection con = DriverManager.getConnection(url, user, pass);
            Statement st = con.createStatement();

            String query = "SELECT ma_loai, ten_loai FROM Loai";
            ResultSet rs = st.executeQuery(query);

            // Xóa tất cả các mục hiện tại trong combobox
            jCbLoaiTrDSThuoc.removeAllItems();
            maLoaiToTenLoaiMap.clear();

            // Thêm các tên loại vào combobox và lưu trữ ánh xạ ma_loai
            while (rs.next()) {
                int maLoai = rs.getInt("ma_loai");
                String tenLoai = rs.getString("ten_loai");
                jCbLoaiTrDSThuoc.addItem(tenLoai);
                maLoaiToTenLoaiMap.put(maLoai, tenLoai);
            }

            // Đóng kết nối
            con.close();
        } catch (Exception e) {
            // Xử lý lỗi
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private String currentImagePath = ""; // Biến lưu trữ đường dẫn hình ảnh hiện tại
    
    private void initListeners() {
        // Thêm ListSelectionListener vào Table2
        Table2.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    int row = Table2.getSelectedRow();
                    if (row >= 0) {
                        // Lấy dữ liệu từ dòng được chọn và hiển thị vào các ô trống
                        jNameDmThuoc.setText(Table2.getValueAt(row, 1).toString()); // Cột ten_loai
                    }
                }
            }
        });
        
        Table1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    int row = Table1.getSelectedRow();
                    if (row >= 0) {
                        // Lấy dữ liệu từ dòng được chọn và hiển thị vào các ô trống
                        jNameThuoc.setText(Table1.getValueAt(row, 1).toString()); // Cột ten_thuoc
                        jCBDVT.setSelectedItem(Table1.getValueAt(row, 2).toString()); // Cột ten_dvt
                        // Giả sử bạn có thể lấy ma_loai và ánh xạ nó về tên loại trong combobox
                        // hoặc xử lý theo cách bạn đã định nghĩa
                        int maLoai = (int) Table1.getValueAt(row, 3); // Cột ma_loai
                        jCbLoaiTrDSThuoc.setSelectedItem(getTenLoaiFromMaLoai(maLoai)); // Chọn item tương ứng trong combobox

                        // jCbLoaiTrDSThuoc.setSelectedItem(Table1.getValueAt(row, 3).toString()); // Cột ma_loai
                        jGiaBan.setText(Table1.getValueAt(row, 4).toString()); // Cột gia_ban
                        jNhaCungCap.setText(Table1.getValueAt(row, 5).toString()); // Cột nha_cc
                        // Hiển thị ảnh và lưu đường dẫn hình ảnh hiện tại
                        currentImagePath = Table1.getValueAt(row, 6).toString(); // Cột hinhanh
                        lblanh.setIcon(ResizeImage(currentImagePath)); // Hiển thị ảnh
                        // Đặt giá trị cho jSoLuongThuoc và jMoTa
                        jSoLuongThuoc.setText(Table1.getValueAt(row, 7).toString()); // Cột so_luong
                        jMoTa.setText(Table1.getValueAt(row, 8).toString()); // Cột mo_ta
                    }
                }
            }
        });
        
        jTongTien.setEditable(false);
    }
    
    private String getTenLoaiFromMaLoai(int maLoai) {
        // Truy vấn cơ sở dữ liệu hoặc sử dụng dữ liệu đã lưu để ánh xạ ma_loai về ten_loai
        // Giả sử có một Map hoặc dữ liệu đã tải để ánh xạ
        // Ví dụ: return loaiMap.get(maLoai);
         return maLoaiToTenLoaiMap.get(maLoai);
    }
    
        //Hàm thực hiện tạo hóa đơn PDF
    public static void createInvoicePDF(int maHD, String filePath) throws SQLException {
        String DB_URL = "jdbc:mysql://localhost:3306/qlthuocstore";
        String USER = "root";
        String PASS = "";

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Lưu file hóa đơn");
        int userSelection = fileChooser.showSaveDialog(null);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            filePath = fileToSave.getAbsolutePath();

            if (!filePath.endsWith(".pdf")) {
                filePath += ".pdf";
            }

            String fontPath = "fonts/DejaVuSans.ttf"; // Đường dẫn tới font chữ DejaVu Sans

            try (Connection conn = DriverManager.getConnection(DB_URL, USER, PASS)) {
                // Lấy thông tin từ bảng BanHang
                String queryBanHang = "SELECT * FROM BanHang WHERE ma_hdx = ?";
                try (PreparedStatement stmt = conn.prepareStatement(queryBanHang)) {
                    stmt.setInt(1, maHD);
                    ResultSet rsBanHang = stmt.executeQuery();

                    // Tạo tài liệu PDF
                    Document document = new Document(PageSize.A4);
                    PdfWriter.getInstance(document, new FileOutputStream(filePath));
                    document.open();

                    // Font chữ DejaVu Sans
                    Font titleFont = FontFactory.getFont(fontPath, "Identity-H", true, 26);
                    Font subTitleFont = FontFactory.getFont(fontPath, "Identity-H", true, 22);
                    Font normalFont = FontFactory.getFont(fontPath, "Identity-H", true, 18);
                    Font thankYouFont = FontFactory.getFont(fontPath, "Identity-H", true, 19);

                    // Tiêu đề
                    Paragraph title = new Paragraph("CỬA HÀNG BÁN THUỐC MEDICK FLARE", titleFont);
                    title.setAlignment(Element.ALIGN_CENTER);
                    document.add(title);

                    Paragraph subTitle = new Paragraph("Hóa đơn bán hàng", subTitleFont);
                    subTitle.setAlignment(Element.ALIGN_CENTER);
                    document.add(subTitle);

                    // Thêm thông tin hóa đơn
                    if (rsBanHang.next()) {
                        String maHDStr = String.valueOf(rsBanHang.getInt("ma_hdx"));
                        String ngayBanStr = String.valueOf(rsBanHang.getDate("ngay_ban"));
                        double thue = rsBanHang.getDouble("thue");
                        double tienGiam = rsBanHang.getDouble("tien_giam");
                        double tienKhTra = rsBanHang.getDouble("tien_kh_tra");
                        double tienThua = rsBanHang.getDouble("tien_thua");
                        double tongTien = rsBanHang.getDouble("tong_tien");

                        Paragraph maHDParagraph = new Paragraph("Mã hóa đơn: " + maHDStr, normalFont);
                        document.add(maHDParagraph);

                        Paragraph ngayBanParagraph = new Paragraph("Ngày bán: " + ngayBanStr, normalFont);
                        document.add(ngayBanParagraph);

                        // Bảng chi tiết hóa đơn
                        PdfPTable table = new PdfPTable(5);
                        table.setWidthPercentage(100);
                        table.setSpacingBefore(10f);
                        table.setSpacingAfter(10f);

                        // Tiêu đề bảng
                        String[] headers = {"Mã thuốc", "Tên thuốc", "Đơn giá", "Số lượng", "Thành tiền"};
                        for (String header : headers) {
                            PdfPCell headerCell = new PdfPCell(new Phrase(header, normalFont));
                            headerCell.setHorizontalAlignment(Element.ALIGN_CENTER);
                            table.addCell(headerCell);
                        }

                        // Lấy thông tin chi tiết bán hàng
                        String queryChiTiet = "SELECT * FROM ChiTietBanHang WHERE ma_hdx = ?";
                        try (PreparedStatement stmtChiTiet = conn.prepareStatement(queryChiTiet)) {
                            stmtChiTiet.setInt(1, maHD);
                            ResultSet rsChiTiet = stmtChiTiet.executeQuery();

                            while (rsChiTiet.next()) {
                                int maThuoc = rsChiTiet.getInt("ma_thuoc");
                                String queryThuoc = "SELECT ten_thuoc FROM Thuoc WHERE ma_thuoc = ?";
                                try (PreparedStatement stmtThuoc = conn.prepareStatement(queryThuoc)) {
                                    stmtThuoc.setInt(1, maThuoc);
                                    ResultSet rsThuoc = stmtThuoc.executeQuery();

                                    if (rsThuoc.next()) {
                                        table.addCell(new PdfPCell(new Phrase(String.valueOf(maThuoc), normalFont)));
                                        table.addCell(new PdfPCell(new Phrase(rsThuoc.getString("ten_thuoc"), normalFont)));
                                        table.addCell(new PdfPCell(new Phrase(String.valueOf(rsChiTiet.getDouble("don_gia")), normalFont)));
                                        table.addCell(new PdfPCell(new Phrase(String.valueOf(rsChiTiet.getInt("so_luong")), normalFont)));
                                        table.addCell(new PdfPCell(new Phrase(String.valueOf(rsChiTiet.getDouble("thanh_tien")), normalFont)));
                                    }
                                }
                            }
                            document.add(table);

                            // Tổng kết
                            Paragraph vatParagraph = new Paragraph("VAT: " + thue + "%", normalFont);
                            vatParagraph.setAlignment(Element.ALIGN_RIGHT);
                            document.add(vatParagraph);

                            Paragraph tienGiamParagraph = new Paragraph("Tiền giảm: " + tienGiam, normalFont);
                            tienGiamParagraph.setAlignment(Element.ALIGN_RIGHT);
                            document.add(tienGiamParagraph);

                            Paragraph tienKhTraParagraph = new Paragraph("Tiền khách trả: " + tienKhTra, normalFont);
                            tienKhTraParagraph.setAlignment(Element.ALIGN_RIGHT);
                            document.add(tienKhTraParagraph);

                            Paragraph tienThuaParagraph = new Paragraph("Tiền thừa: " + tienThua, normalFont);
                            tienThuaParagraph.setAlignment(Element.ALIGN_RIGHT);
                            document.add(tienThuaParagraph);

                            Paragraph tongTienParagraph = new Paragraph("Tổng tiền: " + tongTien, normalFont);
                            tongTienParagraph.setAlignment(Element.ALIGN_RIGHT);
                            document.add(tongTienParagraph);

                            // Thêm dòng "Cảm ơn khách hàng đã mua thuốc của chúng tôi"
                            Paragraph thankYouParagraph = new Paragraph("Cảm ơn khách hàng đã mua sản phẩm của chúng tôi", thankYouFont);
                            thankYouParagraph.setAlignment(Element.ALIGN_CENTER);
                            document.add(thankYouParagraph);
                        }
                    }

                    document.close();
                    JOptionPane.showMessageDialog(null, "Hóa đơn đã được tạo thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                } catch (SQLException e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, "Lỗi khi truy vấn dữ liệu: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
                } catch (DocumentException | IOException e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, "Lỗi khi tạo file PDF: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                    QuanLy ql = new QuanLy();
                 ql.setVisible(true);
                 ql.jp1.setVisible(true); // Hiển thị panel jp1 mặc định
                 ql.jp2.setVisible(false); // Ẩn panel jp2 ban đầu
                 ql.jp3.setVisible(false); // Ẩn panel jp2 ban đầu
                 ql.jp4.setVisible(false); // Ẩn panel jp2 ban đầu
                 ql.jp5.setVisible(false); // Ẩn panel jp2 ban đầu
                 ql.jp6.setVisible(false); // Ẩn panel jp2 ban đầu
            }
        });
    }
    
    /*
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table1;
    private javax.swing.JTable Table2;
    private javax.swing.JTable Table3;
    private javax.swing.JTable Table4;
    private javax.swing.JTable Table5;
    private javax.swing.JTable Table6;
    private javax.swing.JButton delete1;
    private javax.swing.JButton delete2;
    private javax.swing.JButton jBtnImage;
    private javax.swing.JButton jBtnIn1;
    private javax.swing.JButton jButton7;
    private javax.swing.JComboBox<String> jCBDVT;
    private javax.swing.JComboBox<String> jCbLoaiTrDSThuoc;
    private javax.swing.JTextField jChonHD;
    private com.toedter.calendar.JDateChooser jDateEnd;
    private com.toedter.calendar.JDateChooser jDateStart;
    private javax.swing.JTextField jGiaBan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton jLogout;
    private javax.swing.JTextField jMoTa;
    private javax.swing.JTextField jNameDmThuoc;
    private javax.swing.JTextField jNameThuoc;
    private javax.swing.JTextField jNhaCungCap;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jSoLuongThuoc;
    private javax.swing.JTextField jTongTien;
    private javax.swing.JPanel jp1;
    private javax.swing.JPanel jp2;
    private javax.swing.JPanel jp3;
    private javax.swing.JPanel jp4;
    private javax.swing.JPanel jp5;
    private javax.swing.JPanel jp6;
    private javax.swing.JLabel lblanh;
    private javax.swing.JButton reset1;
    private javax.swing.JButton reset5;
    private javax.swing.JButton searchBtn1;
    private javax.swing.JButton searchBtn2;
    private javax.swing.JButton searchBtn3;
    private javax.swing.JButton searchBtn4;
    private javax.swing.JButton searchBtn5;
    private javax.swing.JTextField searchData1;
    private javax.swing.JTextField searchData2;
    private javax.swing.JTextField searchData3;
    private javax.swing.JTextField searchData4;
    private javax.swing.JButton submit1;
    private javax.swing.JButton submit2;
    private javax.swing.JPanel tab1;
    private javax.swing.JPanel tab2;
    private javax.swing.JPanel tab3;
    private javax.swing.JPanel tab4;
    private javax.swing.JPanel tab5;
    private javax.swing.JPanel tab6;
    private javax.swing.JButton update1;
    private javax.swing.JButton update2;
    // End of variables declaration//GEN-END:variables
    */
    
    // Variables declaration - do not modify                     
    private javax.swing.JTable Table1;
    private javax.swing.JTable Table2;
    private javax.swing.JTable Table3;
    private javax.swing.JTable Table4;
    private javax.swing.JTable Table5;
    private javax.swing.JTable Table6;
    private javax.swing.JButton delete1;
    private javax.swing.JButton delete2;
    private javax.swing.JButton jBtnImage;
    private javax.swing.JButton jBtnIn1;
    private javax.swing.JButton jButton7;
    private javax.swing.JComboBox<String> jCBDVT;
    private javax.swing.JComboBox<String> jCbLoaiTrDSThuoc;
    private javax.swing.JTextField jChonHD;
    private com.toedter.calendar.JDateChooser jDateEnd;
    private com.toedter.calendar.JDateChooser jDateStart;
    private javax.swing.JTextField jGiaBan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton jLogout;
    private javax.swing.JTextField jMoTa;
    private javax.swing.JTextField jNameDmThuoc;
    private javax.swing.JTextField jNameThuoc;
    private javax.swing.JTextField jNhaCungCap;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jSoLuongThuoc;
    private javax.swing.JTextField jTongTien;
    private javax.swing.JLabel lblanh;
    private javax.swing.JButton reset1;
    private javax.swing.JButton reset5;
    private javax.swing.JButton searchBtn1;
    private javax.swing.JButton searchBtn2;
    private javax.swing.JButton searchBtn3;
    private javax.swing.JButton searchBtn4;
    private javax.swing.JButton searchBtn5;
    private javax.swing.JTextField searchData1;
    private javax.swing.JTextField searchData2;
    private javax.swing.JTextField searchData3;
    private javax.swing.JTextField searchData4;
    private javax.swing.JButton submit1;
    private javax.swing.JButton submit2;
    private javax.swing.JPanel tab1;
    private javax.swing.JPanel tab2;
    private javax.swing.JPanel tab3;
    private javax.swing.JPanel tab4;
    private javax.swing.JPanel tab5;
    private javax.swing.JPanel tab6;
    private javax.swing.JButton update1;
    private javax.swing.JButton update2;
    // End of variables declaration                                                 
}
